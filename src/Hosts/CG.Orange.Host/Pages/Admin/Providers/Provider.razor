@page "/admin/providers/provider/{ProviderId:int}"
@attribute [Authorize(Roles = "SuperAdmin")]

<PageTitle>Provider</PageTitle>

<MudBreadcrumbs Items="_crumbs"></MudBreadcrumbs>

@if (_model is null)
{
    <MudText Class="py-5" Typo="Typo.h6" Color="Color.Warning">Ooops! we couldn't find that provider!</MudText>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => NavigationManager.NavigateTo("/admin/providers"))">Back to Providers</MudButton>
}
else
{
    <MudText Typo="Typo.h6">Provider</MudText>
    <MudText Typo="Typo.body1" Class="pb-5">Use this page to edit this <b>@(Enum.GetName(_model.ProviderType).ToLower())</b> provider.</MudText>

    <EditForm Model="_model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save Changes</MudButton>
            </MudItem>
            <MudItem xs="12">
                <MudTextField AutoFocus
                              Required
                              Class="ml-auto"
                              Variant="Variant.Outlined"
                              Label="Name"
                              For="@(() => _model.Name)"
                @bind-Value="@_model.Name" />
            </MudItem>
            <MudItem xs="12">
                <MudTextField Variant="Variant.Outlined"
                              Class="ml-auto"
                              Label="Description"
                              For="@(() => _model.Description)"
                              Lines="4"
                @bind-Value="@_model.Description" />
            </MudItem>
            <MudItem xs="12">
                <MudSwitch Label="Disabled"
                           Class="ml-auto"
                           Color="Color.Warning"
                           For="@(() => _model.IsDisabled)"
                @bind-Value="@_model.IsDisabled" />
            </MudItem>
            <MudItem xs="12">
                <MudSelect T="ProviderType"
                           Required
                @bind-Value="_model.ProviderType"
                           SelectedValuesChanged="OnProviderTypeChanged"
                           Class="ml-auto"
                           Label="Provider Type" Placeholder="Select a provider type.">
                    @foreach (var providerType in Enum.GetNames<ProviderType>())
                    {
                        <MudSelectItem Value="@(Enum.Parse<ProviderType>(providerType))">@providerType</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12">
                <MudSelect T="string"
                           Required
                @bind-Value="_model.ProcessorType"
                           Class="ml-auto"
                           Label="Processor Type"
                           Placeholder="Select a processor type."
                           ToStringFunc="@(x => x is null ? "" : Type.GetType(x)?.FullName ?? "")">
                    @if (_model.ProviderType == ProviderType.Secret)
                    {
                        @foreach (var processorType in _secretProcessorTypes)
                        {
                            <MudSelectItem Value="@processorType.FullName">@processorType.FullName</MudSelectItem>
                        }
                    }
                    else
                    {
                        @foreach (var processorType in _cacheProcessorTypes)
                        {
                            <MudSelectItem Value="@processorType.FullName">@processorType.FullName</MudSelectItem>
                        }
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12">
                <MudTable Items="_model.Properties"
                          Dense
                          Striped
                          Hover
                          CanCancelEdit
                          ApplyButtonPosition="TableApplyButtonPosition.End"
                          EditButtonPosition="TableEditButtonPosition.End"
                          EditTrigger="TableEditTrigger.EditButton"
                          RowEditPreview="OnBackupProperty"
                          RowEditCommit="OnCommitProperty"
                          RowEditCancel="OnRollbackProperty">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Properties</MudText>
                        <MudButton StartIcon="@Icons.Material.Filled.Create"
                                   Class="mt-1 ml-10"
                                   Color="Color.Secondary"
                                   Variant="Variant.Filled"
                                   OnClick="OnCreatePropertyAsync">Create</MudButton>
                        <MudSpacer />
                    </ToolBarContent>
                    <ColGroup>
                        <col />
                        <col />
                        <col style="width:1px" />
                    </ColGroup>
                    <HeaderContent>
                        <MudTh><MudTableSortLabel SortBy="new Func<ProviderPropertyModel, object>(x=>x.Key)">Key</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ProviderPropertyModel, object>(x=>x.Value)">Value</MudTableSortLabel></MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate Context="context2">
                        <MudTd DataLabel="Key">@context2.Key</MudTd>
                        <MudTd DataLabel="Value"><MudTextField T="string" DisableUnderLine InputType="InputType.Password" ReadOnly Text="@context2.Value" /></MudTd>
                        <MudTd>
                            <MudIconButton Class="p-0 m-0" Icon="@Icons.Material.Outlined.Delete" OnClick="@(() => OnDeletePropertyAsync(@context2))" />
                        </MudTd>
                    </RowTemplate>
                    <RowEditingTemplate Context="context2">
                        <MudTd DataLabel="Key">
                            <MudTextField @bind-Value="@context2.Key" Required />
                        </MudTd>
                        <MudTd DataLabel="Value">
                            <MudTextField @bind-Value="@context2.Value" />
                        </MudTd>
                    </RowEditingTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                    <NoRecordsContent>
                        No properties were found.
                    </NoRecordsContent>
                    <LoadingContent>
                        Loading properties ...
                    </LoadingContent>
                </MudTable>
            </MudItem>
            <MudItem xs="6">
                <MudTextField T="string"
                              Variant="Variant.Outlined"
                              Required
                              Class="ml-auto"
                              Label="Created On"
                              ReadOnly
                              Text="@_model.CreatedOnUtc.ToLocalTime().ToString()" />
            </MudItem>
            <MudItem xs="6">
                <MudTextField Variant="Variant.Outlined"
                              Required
                              Class="ml-auto"
                              Label="Created By"
                              ReadOnly
                              For="@(() => _model.CreatedBy)"
                @bind-Value="@_model.CreatedBy" />
            </MudItem>
            <MudItem xs="6">
                <MudTextField T="string"
                              Variant="Variant.Outlined"
                              Class="ml-auto"
                              Label="Last Updated On"
                              ReadOnly
                              Text="@(_model.LastUpdatedOnUtc == null ? "" : _model.LastUpdatedOnUtc.Value.ToLocalTime().ToString())" />
            </MudItem>
            <MudItem xs="6">
                <MudTextField Variant="Variant.Outlined"
                              Class="ml-auto"
                              Label="Last Updated By"
                              ReadOnly
                              For="@(() => _model.LastUpdatedBy)"
                @bind-Value="@_model.LastUpdatedBy" />
            </MudItem>
            <MudItem xs="12">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save Changes</MudButton>
            </MudItem>
        </MudGrid>
    </EditForm>

}
