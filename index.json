{
  "api/CG.Orange.GlobalUsings.html": {
    "href": "api/CG.Orange.GlobalUsings.html",
    "title": "Class GlobalUsings",
    "keywords": "Class GlobalUsings Inheritance System.Object GlobalUsings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange Assembly : CG.Orange.Providers.Azure.dll Syntax class GlobalUsings"
  },
  "api/CG.Orange.Host.Controllers.html": {
    "href": "api/CG.Orange.Host.Controllers.html",
    "title": "Namespace CG.Orange.Host.Controllers",
    "keywords": "Namespace CG.Orange.Host.Controllers Classes SettingsController This class is a REST controller for resources."
  },
  "api/CG.Orange.Host.Controllers.SettingsController.html": {
    "href": "api/CG.Orange.Host.Controllers.SettingsController.html",
    "title": "Class SettingsController",
    "keywords": "Class SettingsController This class is a REST controller for resources. Inheritance System.Object SettingsController Namespace : CG.Orange.Host.Controllers Assembly : CG.Orange.Host.Controllers.dll Syntax public class SettingsController : ControllerBase Constructors SettingsController(ILogger<SettingsController>) This constructor creates a new instance of the SettingsController Declaration public SettingsController(ILogger<SettingsController> logger) Parameters Type Name Description ILogger < SettingsController > logger The logger to use with this controller. Fields _logger This field contains the logger for the controller. Declaration readonly ILogger<SettingsController> _logger Field Value Type Description ILogger < SettingsController > Methods PostAsync(SettingsRequestVM) This method returns a collection of configuration settings for the given application and environment. Declaration public virtual async Task<IActionResult> PostAsync(SettingsRequestVM model) Parameters Type Name Description SettingsRequestVM model The request parameters to use for the operation. Returns Type Description Task < IActionResult > A task to perform the operation that returns the results of the action."
  },
  "api/CG.Orange.Host.Options.html": {
    "href": "api/CG.Orange.Host.Options.html",
    "title": "Namespace CG.Orange.Host.Options",
    "keywords": "Namespace CG.Orange.Host.Options Classes IdentityOptions This class contains configuration settings for identity operations."
  },
  "api/CG.Orange.Host.Options.IdentityOptions.html": {
    "href": "api/CG.Orange.Host.Options.IdentityOptions.html",
    "title": "Class IdentityOptions",
    "keywords": "Class IdentityOptions This class contains configuration settings for identity operations. Inheritance System.Object IdentityOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Options Assembly : CG.Orange.Host.dll Syntax public class IdentityOptions Properties Authority This property contains the URL for the identity authority. Declaration public string Authority { get; set; } Property Value Type Description System.String ClientId This property contains the client identifier. Declaration public string ClientId { get; set; } Property Value Type Description System.String ClientSecret This property contains the client secret. Declaration public string ClientSecret { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.Host.Pages.Account.html": {
    "href": "api/CG.Orange.Host.Pages.Account.html",
    "title": "Namespace CG.Orange.Host.Pages.Account",
    "keywords": "Namespace CG.Orange.Host.Pages.Account Classes LoginModel This class is the code-behind for the Login page."
  },
  "api/CG.Orange.Host.Pages.Account.LoginModel.html": {
    "href": "api/CG.Orange.Host.Pages.Account.LoginModel.html",
    "title": "Class LoginModel",
    "keywords": "Class LoginModel This class is the code-behind for the Login page. Inheritance System.Object LoginModel Namespace : CG.Orange.Host.Pages.Account Assembly : CG.Orange.Host.dll Syntax public class LoginModel : PageModel Methods OnGet(String) This method is called when the get receives a GET request. Declaration public async Task OnGet(string redirectUri) Parameters Type Name Description System.String redirectUri The redirect uri to use for the operation. Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Host.Pages.Admin.Settings.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Settings.html",
    "title": "Namespace CG.Orange.Host.Pages.Admin.Settings",
    "keywords": "Namespace CG.Orange.Host.Pages.Admin.Settings Classes Index This class is the code-behind for the Index page. Setting This class is the code-behind for the Setting page."
  },
  "api/CG.Orange.Host.Pages.Admin.Settings.Index.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Settings.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages.Admin.Settings Assembly : CG.Orange.Host.dll Syntax public class Index Fields _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected readonly List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > _settings This field contains the list of settings. Declaration protected IEnumerable<SettingFile> _settings Field Value Type Description IEnumerable < SettingFile > Properties DialogService This property contains the dialog service for the page. Declaration protected IDialogService DialogService { get; set; } Property Value Type Description IDialogService HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor Logger This property contains the logger for this page. Declaration protected ILogger<Index> Logger { get; set; } Property Value Type Description ILogger < Index > NavigationManager This property contains the navigation manager for the page. Declaration protected NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager SettingFileManager This property contains the setting file manager for the page. Declaration protected ISettingFileManager SettingFileManager { get; set; } Property Value Type Description ISettingFileManager SnackbarService This property contains the snackbar service for the page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar UserName This property contains the name of the current user, or the word 'anonymous' if nobody is currently authenticated. Declaration protected string UserName { get; } Property Value Type Description System.String Methods GuessSomeNamesAsync(String) This method tries to guess an application and environment name based on the given file name. Declaration async Task<(string, string)> GuessSomeNamesAsync(string fileName) Parameters Type Name Description System.String fileName The name of a JSON file. Returns Type Description Task < System.ValueTuple < System.String , System.String >> A task to perform the operation that returns a tuple containing an application and environment name. OnCreateAsync() This method is called when the user creates a new setting file. Declaration protected async Task OnCreateAsync() Returns Type Description Task A task to perform the operation. OnDeleteAsync(SettingFile) This method is called to delete a setting file. Declaration protected async Task OnDeleteAsync(SettingFile file) Parameters Type Name Description SettingFile file Returns Type Description Task A task to perform the operation. OnFilesChangedAsync(IBrowserFile) This method is called when the user imports a setting file. Declaration protected async Task OnFilesChangedAsync(IBrowserFile file) Parameters Type Name Description IBrowserFile file Returns Type Description Task A task to perform the operation. OnInitializedAsync() This method is called to initialize the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation. ParseAndVerifyAsync(IBrowserFile) This file parses and verifies the structure of the JSON in the given object. Declaration async Task<string> ParseAndVerifyAsync(IBrowserFile file) Parameters Type Name Description IBrowserFile file The file to use for the operation. Returns Type Description Task < System.String > A task to perform the operation that returns the JSON contents of the file."
  },
  "api/CG.Orange.Host.Pages.Admin.Settings.Setting.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Settings.Setting.html",
    "title": "Class Setting",
    "keywords": "Class Setting This class is the code-behind for the Setting page. Inheritance System.Object Setting Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages.Admin.Settings Assembly : CG.Orange.Host.dll Syntax public class Setting Fields _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > _model This field contains the model for the page. Declaration protected SettingFile? _model Field Value Type Description System.Nullable < SettingFile > Properties HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor Logger This property contains the logger for this page. Declaration protected ILogger<Setting> Logger { get; set; } Property Value Type Description ILogger < Setting > NavigationManager This property contains the navigation manager for the page. Declaration protected NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager SettingFileManager This property contains the setting file manager for the page. Declaration protected ISettingFileManager SettingFileManager { get; set; } Property Value Type Description ISettingFileManager SettingId This property contains the identifier for the setting. Declaration public int SettingId { get; set; } Property Value Type Description System.Int32 SnackbarService This property contains the snackbar service for the page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar UserName This property contains the name of the current user, or the word 'anonymous' if nobody is currently authenticated. Declaration protected string UserName { get; } Property Value Type Description System.String Methods OnInitializedAsync() This method is called to initialize the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation. OnValidateJsonAsync() This method is called to validate the JSON for the model. Declaration protected Task<bool> OnValidateJsonAsync() Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if the JSON is valid, false otherwise. OnValidSubmit() This method is called when the user submits the form. Declaration protected async Task OnValidSubmit() Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Host.Pages.ErrorModel.html": {
    "href": "api/CG.Orange.Host.Pages.ErrorModel.html",
    "title": "Class ErrorModel",
    "keywords": "Class ErrorModel This class is the code-behind for the Error page. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel ErrorModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages Assembly : CG.Orange.Host.dll Syntax [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public class ErrorModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Constructors ErrorModel(ILogger<ErrorModel>) This constructor creates a new instance of the ErrorModel class. Declaration public ErrorModel(ILogger<ErrorModel> logger) Parameters Type Name Description ILogger < ErrorModel > logger The logger for this model Fields _logger This field contains the logger for this model. Declaration readonly ILogger<ErrorModel> _logger Field Value Type Description ILogger < ErrorModel > Properties RequestId This property contains the request identifier for this model. Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId This property indicates whether or not to show the RequestId property on the error page. Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean Methods OnGet() This method is called when the page receives an HTTP GET verb. Declaration public void OnGet() Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Orange.Host.Pages.Home.html": {
    "href": "api/CG.Orange.Host.Pages.Home.html",
    "title": "Namespace CG.Orange.Host.Pages.Home",
    "keywords": "Namespace CG.Orange.Host.Pages.Home Classes Index This class is the code-behind for the Index page."
  },
  "api/CG.Orange.Host.Pages.Home.Index.html": {
    "href": "api/CG.Orange.Host.Pages.Home.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages.Home Assembly : CG.Orange.Host.dll Syntax public class Index"
  },
  "api/CG.Orange.Host.Pages.html": {
    "href": "api/CG.Orange.Host.Pages.html",
    "title": "Namespace CG.Orange.Host.Pages",
    "keywords": "Namespace CG.Orange.Host.Pages Classes ErrorModel This class is the code-behind for the Error page."
  },
  "api/CG.Orange.Host.Themes.DefaultTheme.html": {
    "href": "api/CG.Orange.Host.Themes.DefaultTheme.html",
    "title": "Class DefaultTheme",
    "keywords": "Class DefaultTheme This class represents the default MudBlazor UI theme. Inheritance System.Object DefaultTheme Namespace : CG.Orange.Host.Themes Assembly : CG.Orange.Host.dll Syntax public class DefaultTheme : MudTheme Constructors DefaultTheme() This constructor creates a new instance of the DefaultTheme class. Declaration protected DefaultTheme() Fields _instance This field contains the singleton theme instance. Declaration static DefaultTheme _instance Field Value Type Description DefaultTheme Methods Instance() This method returns a singleton instance of DefaultTheme Declaration public static DefaultTheme Instance() Returns Type Description DefaultTheme The singleton instance of DefaultTheme"
  },
  "api/CG.Orange.Host.Themes.html": {
    "href": "api/CG.Orange.Host.Themes.html",
    "title": "Namespace CG.Orange.Host.Themes",
    "keywords": "Namespace CG.Orange.Host.Themes Classes DefaultTheme This class represents the default MudBlazor UI theme."
  },
  "api/CG.Orange.Host.ViewModels.html": {
    "href": "api/CG.Orange.Host.ViewModels.html",
    "title": "Namespace CG.Orange.Host.ViewModels",
    "keywords": "Namespace CG.Orange.Host.ViewModels Classes SettingsRequestVM This class represents a request for configuration settings from a client provider."
  },
  "api/CG.Orange.Host.ViewModels.SettingsRequestVM.html": {
    "href": "api/CG.Orange.Host.ViewModels.SettingsRequestVM.html",
    "title": "Class SettingsRequestVM",
    "keywords": "Class SettingsRequestVM This class represents a request for configuration settings from a client provider. Inheritance System.Object SettingsRequestVM Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.ViewModels Assembly : CG.Orange.Host.Controllers.dll Syntax public class SettingsRequestVM Properties Application This property contains the application for the settings. Declaration public string Application { get; set; } Property Value Type Description System.String Environment This property contains the optional environment for the settings. Declaration public string Environment { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.html": {
    "href": "api/CG.Orange.html",
    "title": "Namespace CG.Orange",
    "keywords": "Namespace CG.Orange Classes GlobalUsings"
  },
  "api/CG.Orange.Managers.html": {
    "href": "api/CG.Orange.Managers.html",
    "title": "Namespace CG.Orange.Managers",
    "keywords": "Namespace CG.Orange.Managers Classes ManagerException This class represents a manager related exception. SettingFileManager Interfaces ISettingFileManager This interface represents an object that manages operations related to objects."
  },
  "api/CG.Orange.Managers.ISettingFileManager.html": {
    "href": "api/CG.Orange.Managers.ISettingFileManager.html",
    "title": "Interface ISettingFileManager",
    "keywords": "Interface ISettingFileManager This interface represents an object that manages operations related to objects. Namespace : CG.Orange.Managers Assembly : CG.Orange.Abstractions.dll Syntax public interface ISettingFileManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. AnyAsync(String, String, CancellationToken) This method indicates whether there are any objects in the underlying storage that match the given application and environment names. Declaration Task<bool> AnyAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(SettingFile, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<SettingFile> CreateAsync(SettingFile settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFile > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(SettingFile, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(SettingFile settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<SettingFile>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < SettingFile >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByApplicationAndEnvironmentAsync(String, String, CancellationToken) This method searches for a matching object using the given application and environment names. Declaration Task<SettingFile?> FindByApplicationAndEnvironmentAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < SettingFile >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a matching object using the given identifier. Declaration Task<SettingFile?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < SettingFile >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(SettingFile, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<SettingFile> UpdateAsync(SettingFile settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFile > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Orange.Managers.ManagerException.html": {
    "href": "api/CG.Orange.Managers.ManagerException.html",
    "title": "Class ManagerException",
    "keywords": "Class ManagerException This class represents a manager related exception. Inheritance System.Object ManagerException Namespace : CG.Orange.Managers Assembly : CG.Orange.Primitives.dll Syntax public class ManagerException : Exception Constructors ManagerException() This constructor creates a new instance of the ManagerException class. Declaration public ManagerException() ManagerException(SerializationInfo, StreamingContext) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. ManagerException(String) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(string message) Parameters Type Name Description System.String message The message to use for the exception. ManagerException(String, Exception) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Orange.Managers.SettingFileManager.html": {
    "href": "api/CG.Orange.Managers.SettingFileManager.html",
    "title": "Class SettingFileManager",
    "keywords": "Class SettingFileManager Inheritance System.Object SettingFileManager Implements ISettingFileManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Managers Assembly : CG.Orange.dll Syntax class SettingFileManager : ISettingFileManager Constructors SettingFileManager(ISettingFileRepository, ILogger<ISettingFileManager>) This constructor creates a new instance of the SettingFileManager class. Declaration public SettingFileManager(ISettingFileRepository settingFileRepository, ILogger<ISettingFileManager> logger) Parameters Type Name Description ISettingFileRepository settingFileRepository The setting file repository to use with this manager. ILogger < ISettingFileManager > logger The logger to use with this manager. Fields _logger This field contains the logger for this manager. Declaration protected readonly ILogger<ISettingFileManager> _logger Field Value Type Description ILogger < ISettingFileManager > _settingFileRepository This field contains the repository for this manager. Declaration protected readonly ISettingFileRepository _settingFileRepository Field Value Type Description ISettingFileRepository Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > AnyAsync(String, String, CancellationToken) Declaration public virtual async Task<bool> AnyAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(SettingFile, String, CancellationToken) Declaration public virtual async Task<SettingFile> CreateAsync(SettingFile settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile System.String userName CancellationToken cancellationToken Returns Type Description Task < SettingFile > DeleteAsync(SettingFile, String, CancellationToken) Declaration public virtual async Task DeleteAsync(SettingFile settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile System.String userName CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<SettingFile>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < SettingFile >> FindByApplicationAndEnvironmentAsync(String, String, CancellationToken) Declaration public virtual async Task<SettingFile?> FindByApplicationAndEnvironmentAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < System.Nullable < SettingFile >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<SettingFile?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < SettingFile >> UpdateAsync(SettingFile, String, CancellationToken) Declaration public virtual async Task<SettingFile> UpdateAsync(SettingFile settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile System.String userName CancellationToken cancellationToken Returns Type Description Task < SettingFile > Implements ISettingFileManager"
  },
  "api/CG.Orange.Models.html": {
    "href": "api/CG.Orange.Models.html",
    "title": "Namespace CG.Orange.Models",
    "keywords": "Namespace CG.Orange.Models Classes ModelBase This class represents a base model. SettingFile This class represents a JSON settings setting file. SettingFileExtensions This class contains extension methods related to the SettingFile type."
  },
  "api/CG.Orange.Models.ModelBase.html": {
    "href": "api/CG.Orange.Models.ModelBase.html",
    "title": "Class ModelBase",
    "keywords": "Class ModelBase This class represents a base model. Inheritance System.Object ModelBase SettingFile Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Primitives.dll Syntax public class ModelBase Properties CreatedBy This property contains the name of the person who created the model. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOnUtc This property contains the date/time when the model was created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime LastUpdatedBy This property contains the name of the last person to update the model. Declaration public string LastUpdatedBy { get; set; } Property Value Type Description System.String LastUpdatedOnUtc This property contains the date/time when the model was last updated. Declaration public DateTime? LastUpdatedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/CG.Orange.Models.SettingFile.html": {
    "href": "api/CG.Orange.Models.SettingFile.html",
    "title": "Class SettingFile",
    "keywords": "Class SettingFile This class represents a JSON settings setting file. Inheritance System.Object ModelBase SettingFile Inherited Members ModelBase.CreatedBy ModelBase.CreatedOnUtc ModelBase.LastUpdatedBy ModelBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Primitives.dll Syntax public class SettingFile : ModelBase Properties ApplicationName This property contains the application name for the settings. Declaration public string ApplicationName { get; set; } Property Value Type Description System.String EnvironmentName This property contains the optional environment name for the settings. Declaration public string EnvironmentName { get; set; } Property Value Type Description System.String Id This property contains the identifier for the model. Declaration public int Id { get; set; } Property Value Type Description System.Int32 IsDisabled This property indicates the settings is disabled. Declaration public bool IsDisabled { get; set; } Property Value Type Description System.Boolean Json This property contains the JSON for the settings. Declaration public string Json { get; set; } Property Value Type Description System.String Extension Methods SettingFileExtensions.SafeEnvironmentName(SettingFile)"
  },
  "api/CG.Orange.Models.SettingFileExtensions.html": {
    "href": "api/CG.Orange.Models.SettingFileExtensions.html",
    "title": "Class SettingFileExtensions",
    "keywords": "Class SettingFileExtensions This class contains extension methods related to the SettingFile type. Inheritance System.Object SettingFileExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Host.dll Syntax public static class SettingFileExtensions Methods SafeEnvironmentName(SettingFile) This method returns an environment name that is safe to use from Blazor pages. Declaration public static string SafeEnvironmentName(this SettingFile settingFile) Parameters Type Name Description SettingFile settingFile The setting file to use for the operation. Returns Type Description System.String A safe string."
  },
  "api/CG.Orange.Options.BllOptions.html": {
    "href": "api/CG.Orange.Options.BllOptions.html",
    "title": "Class BllOptions",
    "keywords": "Class BllOptions This class contains configuration settings for the Orange business logic layer. Inheritance System.Object BllOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Options Assembly : CG.Orange.dll Syntax public class BllOptions"
  },
  "api/CG.Orange.Options.html": {
    "href": "api/CG.Orange.Options.html",
    "title": "Namespace CG.Orange.Options",
    "keywords": "Namespace CG.Orange.Options Classes BllOptions This class contains configuration settings for the Orange business logic layer."
  },
  "api/CG.Orange.Repositories.html": {
    "href": "api/CG.Orange.Repositories.html",
    "title": "Namespace CG.Orange.Repositories",
    "keywords": "Namespace CG.Orange.Repositories Classes RepositoryException This class represents a repository related exception. Interfaces ISettingFileRepository This interface represents an object that manages the storage and retrieval of objects."
  },
  "api/CG.Orange.Repositories.ISettingFileRepository.html": {
    "href": "api/CG.Orange.Repositories.ISettingFileRepository.html",
    "title": "Interface ISettingFileRepository",
    "keywords": "Interface ISettingFileRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Orange.Repositories Assembly : CG.Orange.Abstractions.dll Syntax public interface ISettingFileRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. AnyAsync(String, String, CancellationToken) This method indicates whether there are any objects in the underlying storage that match the given application and environment names. Declaration Task<bool> AnyAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(SettingFile, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<SettingFile> CreateAsync(SettingFile settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFile > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(SettingFile, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(SettingFile settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<SettingFile>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < SettingFile >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByApplicationAndEnvironmentAsync(String, String, CancellationToken) This method searches for a matching object using the given application and environment names. Declaration Task<SettingFile?> FindByApplicationAndEnvironmentAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < SettingFile >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a matching object using the given identifier. Declaration Task<SettingFile?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < SettingFile >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(SettingFile, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<SettingFile> UpdateAsync(SettingFile settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFile > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Orange.Repositories.RepositoryException.html": {
    "href": "api/CG.Orange.Repositories.RepositoryException.html",
    "title": "Class RepositoryException",
    "keywords": "Class RepositoryException This class represents a repository related exception. Inheritance System.Object RepositoryException Namespace : CG.Orange.Repositories Assembly : CG.Orange.Primitives.dll Syntax public class RepositoryException : Exception Constructors RepositoryException() This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException() RepositoryException(SerializationInfo, StreamingContext) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. RepositoryException(String) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message) Parameters Type Name Description System.String message The message to use for the exception. RepositoryException(String, Exception) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Orange.SqlLite.Entities.EntityBase.html": {
    "href": "api/CG.Orange.SqlLite.Entities.EntityBase.html",
    "title": "Class EntityBase",
    "keywords": "Class EntityBase This class represents a base entity. Inheritance System.Object EntityBase SettingFile Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.SqlLite.Entities Assembly : CG.Orange.SqlLite.dll Syntax class EntityBase Properties CreatedBy This property contains the name of the person who created the entity. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOnUtc This property contains the date/time when the entity was created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime LastUpdatedBy This property contains the name of the last person to update the entity. Declaration public string LastUpdatedBy { get; set; } Property Value Type Description System.String LastUpdatedOnUtc This property contains the date/time when the entity was last updated. Declaration public DateTime? LastUpdatedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/CG.Orange.SqlLite.Entities.html": {
    "href": "api/CG.Orange.SqlLite.Entities.html",
    "title": "Namespace CG.Orange.SqlLite.Entities",
    "keywords": "Namespace CG.Orange.SqlLite.Entities Classes EntityBase This class represents a base entity. SettingFile This class represents a JSON setting file entity."
  },
  "api/CG.Orange.SqlLite.Entities.SettingFile.html": {
    "href": "api/CG.Orange.SqlLite.Entities.SettingFile.html",
    "title": "Class SettingFile",
    "keywords": "Class SettingFile This class represents a JSON setting file entity. Inheritance System.Object EntityBase SettingFile Inherited Members EntityBase.CreatedBy EntityBase.CreatedOnUtc EntityBase.LastUpdatedBy EntityBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.SqlLite.Entities Assembly : CG.Orange.SqlLite.dll Syntax class SettingFile : EntityBase Properties ApplicationName This property contains the application name for the settings. Declaration public string ApplicationName { get; set; } Property Value Type Description System.String EnvironmentName This property contains the optional environment name for the settings. Declaration public string EnvironmentName { get; set; } Property Value Type Description System.String Id This property contains the identifier for the model. Declaration public int Id { get; set; } Property Value Type Description System.Int32 IsDisabled This property indicates the settings is disabled. Declaration public bool IsDisabled { get; set; } Property Value Type Description System.Boolean Json This property contains the JSON for the settings. Declaration public string Json { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.SqlLite.html": {
    "href": "api/CG.Orange.SqlLite.html",
    "title": "Namespace CG.Orange.SqlLite",
    "keywords": "Namespace CG.Orange.SqlLite Classes OrangeDbContext This class is a data-context for the CG.Orange microservice."
  },
  "api/CG.Orange.SqlLite.Maps.EntityMapBase-1.html": {
    "href": "api/CG.Orange.SqlLite.Maps.EntityMapBase-1.html",
    "title": "Class EntityMapBase<TEntity>",
    "keywords": "Class EntityMapBase<TEntity> This class represents a base map for entity types derived from EntityBase Inheritance System.Object EntityMapBase<TEntity> SettingFileMap Namespace : CG.Orange.SqlLite.Maps Assembly : CG.Orange.SqlLite.dll Syntax abstract class EntityMapBase<TEntity> : IEntityTypeConfiguration<TEntity> where TEntity : EntityBase Type Parameters Name Description TEntity Constructors EntityMapBase(ModelBuilder) This constructor creates a new instance of the EntityMapBase<TEntity> class. Declaration public EntityMapBase(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Fields _modelBuilder This field contains the model builder for this map. Declaration protected readonly ModelBuilder _modelBuilder Field Value Type Description ModelBuilder Methods Configure(EntityTypeBuilder<TEntity>) This method configures the TEntity entity. Declaration public virtual void Configure(EntityTypeBuilder<TEntity> builder) Parameters Type Name Description EntityTypeBuilder <TEntity> builder The builder to use for the operation."
  },
  "api/CG.Orange.SqlLite.Maps.html": {
    "href": "api/CG.Orange.SqlLite.Maps.html",
    "title": "Namespace CG.Orange.SqlLite.Maps",
    "keywords": "Namespace CG.Orange.SqlLite.Maps Classes EntityMapBase<TEntity> This class represents a base map for entity types derived from EntityBase SettingFileMap This class is an EFCore configuration map for the SettingFile entity type."
  },
  "api/CG.Orange.SqlLite.Maps.SettingFileMap.html": {
    "href": "api/CG.Orange.SqlLite.Maps.SettingFileMap.html",
    "title": "Class SettingFileMap",
    "keywords": "Class SettingFileMap This class is an EFCore configuration map for the SettingFile entity type. Inheritance System.Object EntityMapBase < SettingFile > SettingFileMap Inherited Members EntityMapBase<SettingFile>._modelBuilder Namespace : CG.Orange.SqlLite.Maps Assembly : CG.Orange.SqlLite.dll Syntax class SettingFileMap : EntityMapBase<SettingFile> Constructors SettingFileMap(ModelBuilder) This constructor creates a new instance of the SettingFileMap class. Declaration public SettingFileMap(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Methods Configure(EntityTypeBuilder<SettingFile>) This method configures the SettingFile entity. Declaration public override void Configure(EntityTypeBuilder<SettingFile> builder) Parameters Type Name Description EntityTypeBuilder < SettingFile > builder The builder to use for the operation. Overrides CG.Orange.SqlLite.Maps.EntityMapBase<CG.Orange.SqlLite.Entities.SettingFile>.Configure(EntityTypeBuilder<CG.Orange.SqlLite.Entities.SettingFile>)"
  },
  "api/CG.Orange.SqlLite.Migrations.html": {
    "href": "api/CG.Orange.SqlLite.Migrations.html",
    "title": "Namespace CG.Orange.SqlLite.Migrations",
    "keywords": "Namespace CG.Orange.SqlLite.Migrations Classes InitialCreate OrangeDbContextModelSnapshot"
  },
  "api/CG.Orange.SqlLite.Migrations.InitialCreate.html": {
    "href": "api/CG.Orange.SqlLite.Migrations.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.SqlLite.Migrations Assembly : CG.Orange.SqlLite.dll Syntax [DbContext(typeof(OrangeDbContext))] [Migration(\"20221226135838_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Orange.SqlLite.Migrations.OrangeDbContextModelSnapshot.html": {
    "href": "api/CG.Orange.SqlLite.Migrations.OrangeDbContextModelSnapshot.html",
    "title": "Class OrangeDbContextModelSnapshot",
    "keywords": "Class OrangeDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot OrangeDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.SqlLite.Migrations Assembly : CG.Orange.SqlLite.dll Syntax [DbContext(typeof(OrangeDbContext))] class OrangeDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Orange.SqlLite.Options.DalOptions.html": {
    "href": "api/CG.Orange.SqlLite.Options.DalOptions.html",
    "title": "Class DalOptions",
    "keywords": "Class DalOptions This class contains configuration settings for the data access layer. Inheritance System.Object DalOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.SqlLite.Options Assembly : CG.Orange.SqlLite.dll Syntax public class DalOptions Properties ConnectionString This property contains the connection string for the DAL. Declaration [Required] public string ConnectionString { get; set; } Property Value Type Description System.String DropDatabaseOnStartup This property directs the DAL to drop the underlying database on startup. Declaration public bool DropDatabaseOnStartup { get; set; } Property Value Type Description System.Boolean Remarks This property is ignored in production. MigrateDatabaseOnStartup This property directs the DAL to migrate the underlying database on startup. Declaration public bool MigrateDatabaseOnStartup { get; set; } Property Value Type Description System.Boolean Remarks This property is ignored in production. If the DropDatabaseOnStartup property is set to true then migrations are always applied, since the database is then dropped and re-created. This property allows migrations to be applied without dropping and re-creating the database."
  },
  "api/CG.Orange.SqlLite.Options.html": {
    "href": "api/CG.Orange.SqlLite.Options.html",
    "title": "Namespace CG.Orange.SqlLite.Options",
    "keywords": "Namespace CG.Orange.SqlLite.Options Classes DalOptions This class contains configuration settings for the data access layer."
  },
  "api/CG.Orange.SqlLite.OrangeDbContext.html": {
    "href": "api/CG.Orange.SqlLite.OrangeDbContext.html",
    "title": "Class OrangeDbContext",
    "keywords": "Class OrangeDbContext This class is a data-context for the CG.Orange microservice. Inheritance System.Object OrangeDbContext Namespace : CG.Orange.SqlLite Assembly : CG.Orange.SqlLite.dll Syntax class OrangeDbContext : DbContext Constructors OrangeDbContext(DbContextOptions<OrangeDbContext>) This constructor creates a new instance of the OrangeDbContext class. Declaration public OrangeDbContext(DbContextOptions<OrangeDbContext> options) Parameters Type Name Description DbContextOptions < OrangeDbContext > options The options to use with this data-context. Properties SettingFiles This property contains the list of setting files. Declaration public virtual DbSet<SettingFile> SettingFiles { get; set; } Property Value Type Description DbSet < SettingFile > Methods OnModelCreating(ModelBuilder) This method is called to create the data model. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The builder to use for the operation."
  },
  "api/CG.Orange.SqlLite.Repositories.html": {
    "href": "api/CG.Orange.SqlLite.Repositories.html",
    "title": "Namespace CG.Orange.SqlLite.Repositories",
    "keywords": "Namespace CG.Orange.SqlLite.Repositories Classes SettingFileRepository This class is an EFCORE implementation of the interface."
  },
  "api/CG.Orange.SqlLite.Repositories.SettingFileRepository.html": {
    "href": "api/CG.Orange.SqlLite.Repositories.SettingFileRepository.html",
    "title": "Class SettingFileRepository",
    "keywords": "Class SettingFileRepository This class is an EFCORE implementation of the interface. Inheritance System.Object SettingFileRepository Namespace : CG.Orange.SqlLite.Repositories Assembly : CG.Orange.SqlLite.dll Syntax class SettingFileRepository : ISettingFileRepository Constructors SettingFileRepository(IDbContextFactory<OrangeDbContext>, IMapper, ILogger<ISettingFileRepository>) This constructor creates a new instance of the SettingFileRepository class. Declaration public SettingFileRepository(IDbContextFactory<OrangeDbContext> dbContextFactory, IMapper mapper, ILogger<ISettingFileRepository> logger) Parameters Type Name Description IDbContextFactory < OrangeDbContext > dbContextFactory The EFCORE data-context factory to use with this repository. IMapper mapper The auto-mapper to use with this repository. ILogger < ISettingFileRepository > logger The logger to use with this repository. Fields _dbContextFactory This field contains the EFCORE data-context factory for this repository. Declaration protected readonly IDbContextFactory<OrangeDbContext> _dbContextFactory Field Value Type Description IDbContextFactory < OrangeDbContext > _logger This field contains the logger for this repository. Declaration protected readonly ILogger<ISettingFileRepository> _logger Field Value Type Description ILogger < ISettingFileRepository > _mapper This field contains the auto-mapper for this repository. Declaration protected readonly IMapper _mapper Field Value Type Description IMapper Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > AnyAsync(String, String, CancellationToken) Declaration public virtual async Task<bool> AnyAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(SettingFile, CancellationToken) Declaration public virtual async Task<SettingFile> CreateAsync(SettingFile settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile CancellationToken cancellationToken Returns Type Description Task < SettingFile > DeleteAsync(SettingFile, CancellationToken) Declaration public virtual async Task DeleteAsync(SettingFile settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<SettingFile>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < SettingFile >> FindByApplicationAndEnvironmentAsync(String, String, CancellationToken) Declaration public virtual async Task<SettingFile?> FindByApplicationAndEnvironmentAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < System.Nullable < SettingFile >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<SettingFile?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < SettingFile >> UpdateAsync(SettingFile, CancellationToken) Declaration public virtual async Task<SettingFile> UpdateAsync(SettingFile settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFile settingFile CancellationToken cancellationToken Returns Type Description Task < SettingFile >"
  },
  "api/CG.Orange.SqlServer.Factories.html": {
    "href": "api/CG.Orange.SqlServer.Factories.html",
    "title": "Namespace CG.Orange.SqlServer.Factories",
    "keywords": "Namespace CG.Orange.SqlServer.Factories Classes OrangeDbContextDesignTimeFactory This class is a default implementation of the interface."
  },
  "api/CG.Orange.SqlServer.Factories.OrangeDbContextDesignTimeFactory.html": {
    "href": "api/CG.Orange.SqlServer.Factories.OrangeDbContextDesignTimeFactory.html",
    "title": "Class OrangeDbContextDesignTimeFactory",
    "keywords": "Class OrangeDbContextDesignTimeFactory This class is a default implementation of the interface. Inheritance System.Object OrangeDbContextDesignTimeFactory Namespace : CG.Orange.SqlServer.Factories Assembly : CG.Orange.SqlLite.dll Syntax class OrangeDbContextDesignTimeFactory : IDesignTimeDbContextFactory<OrangeDbContext> Methods CreateDbContext(String[]) This method creates a new instance. Declaration public OrangeDbContext CreateDbContext(string[] args) Parameters Type Name Description System.String [] args Optional arguments. Returns Type Description OrangeDbContext A instance."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. WebApplicationExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions",
    "keywords": "Class WebApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.Host.dll Syntax static class WebApplicationBuilderExtensions Methods AddOrangeIdentity(WebApplicationBuilder, String, Nullable<ILogger>) This method registers the identity services required to integrate with an ODIC identity authority. Declaration public static WebApplicationBuilder AddOrangeIdentity(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"Identity\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section name to use for the operation. System.Nullable < ILogger > bootstrapLogger The optional bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style"
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html",
    "title": "Class WebApplicationBuilderExtensions001",
    "keywords": "Class WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions001 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.dll Syntax public static class WebApplicationBuilderExtensions001 Methods AddBusinessLayer(WebApplicationBuilder, String, Nullable<ILogger>) This method adds the business logic layer (managers and directors) for the CG.Orange project. Declaration public static WebApplicationBuilder AddBusinessLayer(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"BLL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to BLL . System.Nullable < ILogger > bootstrapLogger The bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions003.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions003.html",
    "title": "Class WebApplicationBuilderExtensions003",
    "keywords": "Class WebApplicationBuilderExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions003 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.SqlLite.dll Syntax public static class WebApplicationBuilderExtensions003 Methods AddDataAccessLayer(WebApplicationBuilder, String, Nullable<ILogger>) This method adds the data-access layer for the CG.Orange project. Declaration public static WebApplicationBuilder AddDataAccessLayer(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html",
    "title": "Class WebApplicationExtensions",
    "keywords": "Class WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.Host.dll Syntax static class WebApplicationExtensions Methods UseOrangeIdentity(WebApplication) This method registers any identity middleware required to integrate with an ODIC identity authority. Declaration public static WebApplication UseOrangeIdentity(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application builder to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style"
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions002.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions002.html",
    "title": "Class WebApplicationExtensions002",
    "keywords": "Class WebApplicationExtensions002 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions002 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.SqlLite.dll Syntax public static class WebApplicationExtensions002 Methods DropAndRecreateDatabaseAsync(WebApplication, CancellationToken) This method drops and recreates the database. Declaration static async Task DropAndRecreateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored throughout the lifetime of the method. Returns Type Description Task A task to perform the operation. MigrateDatabaseAsync(WebApplication, CancellationToken) This method migrates the database. project. Declaration static async Task MigrateDatabaseAsync(this WebApplication webApplication, CancellationToken cancellationToken = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the life of the operation. Returns Type Description Task A task to perform the operation. UseDalStartup(WebApplication) This method runs the DAL startup logic for the CG.Orange project. Declaration public static WebApplication UseDalStartup(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Purple is an idea for a self contained messaging microservice."
  }
}