{
  "api/CG.Orange.Controllers.AccountController.html": {
    "href": "api/CG.Orange.Controllers.AccountController.html",
    "title": "Class AccountController",
    "keywords": "Class AccountController This class is a REST controller for account operations. Inheritance System.Object AccountController Namespace : CG.Orange.Controllers Assembly : CG.Orange.Controllers.dll Syntax public class AccountController : ControllerBase Constructors AccountController(HttpClient, IOptions<OrangeIdentityOptions>, ILogger<AccountController>) This constructor creates a new instance of the AccountController Declaration public AccountController(HttpClient httpClient, IOptions<OrangeIdentityOptions> identityOptions, ILogger<AccountController> logger) Parameters Type Name Description HttpClient httpClient The HTTP client to use with this controller. IOptions < OrangeIdentityOptions > identityOptions The identity options to use with this controller. ILogger < AccountController > logger The logger to use with this controller. Fields _httpClient This field contains the HTTP client for this controller. Declaration protected readonly HttpClient _httpClient Field Value Type Description HttpClient _identityOptions This field contains the identity options for this controller. Declaration protected readonly OrangeIdentityOptions _identityOptions Field Value Type Description OrangeIdentityOptions _logger This field contains the logger for this controller. Declaration protected readonly ILogger<AccountController> _logger Field Value Type Description ILogger < AccountController > Methods ClientLoginAsync(ClientLoginRequest) This method performs a client credentials grant login operation. Declaration public virtual async Task<IActionResult> ClientLoginAsync(ClientLoginRequest model) Parameters Type Name Description ClientLoginRequest model The request parameters to use for the operation. Returns Type Description Task < IActionResult > A task to perform the operation that returns the results of the action."
  },
  "api/CG.Orange.Controllers.html": {
    "href": "api/CG.Orange.Controllers.html",
    "title": "Namespace CG.Orange.Controllers",
    "keywords": "Namespace CG.Orange.Controllers Classes AccountController This class is a REST controller for account operations. SettingsController This class is a REST controller for resources."
  },
  "api/CG.Orange.Controllers.SettingsController.html": {
    "href": "api/CG.Orange.Controllers.SettingsController.html",
    "title": "Class SettingsController",
    "keywords": "Class SettingsController This class is a REST controller for resources. Inheritance System.Object SettingsController Namespace : CG.Orange.Controllers Assembly : CG.Orange.Controllers.dll Syntax public class SettingsController : ControllerBase Constructors SettingsController(IConfigurationDirector, ILogger<SettingsController>) This constructor creates a new instance of the SettingsController Declaration public SettingsController(IConfigurationDirector configurationDirector, ILogger<SettingsController> logger) Parameters Type Name Description IConfigurationDirector configurationDirector The configuration director to use with this controller. ILogger < SettingsController > logger The logger to use with this controller. Fields _configurationDirector This field contains the configuration director for this controller. Declaration protected readonly IConfigurationDirector _configurationDirector Field Value Type Description IConfigurationDirector _logger This field contains the logger for this controller. Declaration protected readonly ILogger<SettingsController> _logger Field Value Type Description ILogger < SettingsController > Methods PostAsync(SettingsRequestVM) This method returns a collection of configuration settings for the given application and environment. Declaration public virtual async Task<IActionResult> PostAsync(SettingsRequestVM model) Parameters Type Name Description SettingsRequestVM model The request parameters to use for the operation. Returns Type Description Task < IActionResult > A task to perform the operation that returns the results of the action."
  },
  "api/CG.Orange.Data.Entities.AuditedEntityBase.html": {
    "href": "api/CG.Orange.Data.Entities.AuditedEntityBase.html",
    "title": "Class AuditedEntityBase",
    "keywords": "Class AuditedEntityBase This class represents a base entity with audit properties. Inheritance System.Object AuditedEntityBase ProviderEntity ProviderPropertyEntity SettingFileEntity Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Data.Entities Assembly : CG.Orange.Data.dll Syntax public class AuditedEntityBase Properties CreatedBy This property contains the name of the person who created the entity. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOnUtc This property contains the date/time when the entity was created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime LastUpdatedBy This property contains the name of the last person to update the entity. Declaration public string LastUpdatedBy { get; set; } Property Value Type Description System.String LastUpdatedOnUtc This property contains the date/time when the entity was last updated. Declaration public DateTime? LastUpdatedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/CG.Orange.Data.Entities.html": {
    "href": "api/CG.Orange.Data.Entities.html",
    "title": "Namespace CG.Orange.Data.Entities",
    "keywords": "Namespace CG.Orange.Data.Entities Classes AuditedEntityBase This class represents a base entity with audit properties. ProviderEntity This class represents a provider entity. ProviderPropertyEntity This class represents a property entity for a provider entity. SettingFileEntity This class represents a JSON setting file entity."
  },
  "api/CG.Orange.Data.Entities.ProviderEntity.html": {
    "href": "api/CG.Orange.Data.Entities.ProviderEntity.html",
    "title": "Class ProviderEntity",
    "keywords": "Class ProviderEntity This class represents a provider entity. Inheritance System.Object AuditedEntityBase ProviderEntity Inherited Members AuditedEntityBase.CreatedBy AuditedEntityBase.CreatedOnUtc AuditedEntityBase.LastUpdatedBy AuditedEntityBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Data.Entities Assembly : CG.Orange.Data.dll Syntax public class ProviderEntity : AuditedEntityBase Properties Description This property contains the optional description for the provider. Declaration public string Description { get; set; } Property Value Type Description System.String Id This property contains the identifier for the provider. Declaration public int Id { get; set; } Property Value Type Description System.Int32 IsDisabled This property indicates whether the provider is disabled, or not. Declaration public bool IsDisabled { get; set; } Property Value Type Description System.Boolean Name This property contains the name for the provider. Declaration public string Name { get; set; } Property Value Type Description System.String ProcessorType This property contains the .NET type for the associated processor. Declaration public string ProcessorType { get; set; } Property Value Type Description System.String Properties This property contains the associated properties for the provider. Declaration public List<ProviderPropertyEntity> Properties { get; set; } Property Value Type Description List < ProviderPropertyEntity > ProviderType This property contains the provider type. Declaration public ProviderType ProviderType { get; set; } Property Value Type Description ProviderType Tag This property contains the tag for the provider. Declaration public string Tag { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.Data.Entities.ProviderPropertyEntity.html": {
    "href": "api/CG.Orange.Data.Entities.ProviderPropertyEntity.html",
    "title": "Class ProviderPropertyEntity",
    "keywords": "Class ProviderPropertyEntity This class represents a property entity for a provider entity. Inheritance System.Object AuditedEntityBase ProviderPropertyEntity Inherited Members AuditedEntityBase.CreatedBy AuditedEntityBase.CreatedOnUtc AuditedEntityBase.LastUpdatedBy AuditedEntityBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Data.Entities Assembly : CG.Orange.Data.dll Syntax public class ProviderPropertyEntity : AuditedEntityBase Properties Id This property contains the unique identifier for the property. Declaration public int Id { get; set; } Property Value Type Description System.Int32 Key This property contains the key for the property. Declaration public string Key { get; set; } Property Value Type Description System.String Provider This property contains the associated provider. Declaration public virtual ProviderEntity Provider { get; set; } Property Value Type Description ProviderEntity ProviderId This property contains the identifier for the associated provider. Declaration public int ProviderId { get; set; } Property Value Type Description System.Int32 Value This property contains the value for the property. Declaration public string Value { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.Data.Entities.SettingFileEntity.html": {
    "href": "api/CG.Orange.Data.Entities.SettingFileEntity.html",
    "title": "Class SettingFileEntity",
    "keywords": "Class SettingFileEntity This class represents a JSON setting file entity. Inheritance System.Object AuditedEntityBase SettingFileEntity Inherited Members AuditedEntityBase.CreatedBy AuditedEntityBase.CreatedOnUtc AuditedEntityBase.LastUpdatedBy AuditedEntityBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Data.Entities Assembly : CG.Orange.Data.dll Syntax public class SettingFileEntity : AuditedEntityBase Properties ApplicationName This property contains the application name for the settings. Declaration public string ApplicationName { get; set; } Property Value Type Description System.String EnvironmentName This property contains the optional environment name for the settings. Declaration public string EnvironmentName { get; set; } Property Value Type Description System.String Id This property contains the identifier for the model. Declaration public int Id { get; set; } Property Value Type Description System.Int32 IsDisabled This property indicates the settings is disabled. Declaration public bool IsDisabled { get; set; } Property Value Type Description System.Boolean Json This property contains the JSON for the settings. Declaration public string Json { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.Data.html": {
    "href": "api/CG.Orange.Data.html",
    "title": "Namespace CG.Orange.Data",
    "keywords": "Namespace CG.Orange.Data Classes OrangeDbContext This class is a data-context for the CG.Orange microservice."
  },
  "api/CG.Orange.Data.Maps.AuditedEntityMapBase-1.html": {
    "href": "api/CG.Orange.Data.Maps.AuditedEntityMapBase-1.html",
    "title": "Class AuditedEntityMapBase<TEntity>",
    "keywords": "Class AuditedEntityMapBase<TEntity> This class represents a base map for entity types derived from Inheritance System.Object AuditedEntityMapBase<TEntity> ProviderEntityMap ProviderPropertyEntityMap SettingFileEntityMap Namespace : CG.Orange.Data.Maps Assembly : CG.Orange.Data.dll Syntax abstract class AuditedEntityMapBase<TEntity> : IEntityTypeConfiguration<TEntity> where TEntity : AuditedEntityBase Type Parameters Name Description TEntity Constructors AuditedEntityMapBase(ModelBuilder) This constructor creates a new instance of the AuditedEntityMapBase<TEntity> class. Declaration public AuditedEntityMapBase(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Fields _modelBuilder This field contains the model builder for this map. Declaration protected readonly ModelBuilder _modelBuilder Field Value Type Description ModelBuilder Methods Configure(EntityTypeBuilder<TEntity>) This method configures the TEntity entity. Declaration public virtual void Configure(EntityTypeBuilder<TEntity> builder) Parameters Type Name Description EntityTypeBuilder <TEntity> builder The builder to use for the operation."
  },
  "api/CG.Orange.Data.Maps.html": {
    "href": "api/CG.Orange.Data.Maps.html",
    "title": "Namespace CG.Orange.Data.Maps",
    "keywords": "Namespace CG.Orange.Data.Maps Classes AuditedEntityMapBase<TEntity> This class represents a base map for entity types derived from ProviderEntityMap This class maps properties for the entity type. ProviderPropertyEntityMap This class maps properties for the entity type. SettingFileEntityMap This class maps properties for the entity type."
  },
  "api/CG.Orange.Data.Maps.ProviderEntityMap.html": {
    "href": "api/CG.Orange.Data.Maps.ProviderEntityMap.html",
    "title": "Class ProviderEntityMap",
    "keywords": "Class ProviderEntityMap This class maps properties for the entity type. Inheritance System.Object AuditedEntityMapBase < ProviderEntity > ProviderEntityMap Inherited Members AuditedEntityMapBase<ProviderEntity>._modelBuilder AuditedEntityMapBase<ProviderEntity>.Configure(EntityTypeBuilder<ProviderEntity>) Namespace : CG.Orange.Data.Maps Assembly : CG.Orange.Data.dll Syntax class ProviderEntityMap : AuditedEntityMapBase<ProviderEntity> Constructors ProviderEntityMap(ModelBuilder) This constructor creates a new instance of the ProviderEntityMap class. Declaration public ProviderEntityMap(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Methods Configure(EntityTypeBuilder<ProviderEntity>) This method configures the ProviderEntity entity. Declaration public override void Configure(EntityTypeBuilder<ProviderEntity> builder) Parameters Type Name Description EntityTypeBuilder < ProviderEntity > builder The builder to use for the operation."
  },
  "api/CG.Orange.Data.Maps.ProviderPropertyEntityMap.html": {
    "href": "api/CG.Orange.Data.Maps.ProviderPropertyEntityMap.html",
    "title": "Class ProviderPropertyEntityMap",
    "keywords": "Class ProviderPropertyEntityMap This class maps properties for the entity type. Inheritance System.Object AuditedEntityMapBase < ProviderPropertyEntity > ProviderPropertyEntityMap Inherited Members AuditedEntityMapBase<ProviderPropertyEntity>._modelBuilder AuditedEntityMapBase<ProviderPropertyEntity>.Configure(EntityTypeBuilder<ProviderPropertyEntity>) Namespace : CG.Orange.Data.Maps Assembly : CG.Orange.Data.dll Syntax class ProviderPropertyEntityMap : AuditedEntityMapBase<ProviderPropertyEntity> Constructors ProviderPropertyEntityMap(ModelBuilder) This constructor creates a new instance of the ProviderPropertyEntityMap class. Declaration public ProviderPropertyEntityMap(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Methods Configure(EntityTypeBuilder<ProviderPropertyEntity>) This method configures the ProviderPropertyEntity entity. Declaration public override void Configure(EntityTypeBuilder<ProviderPropertyEntity> builder) Parameters Type Name Description EntityTypeBuilder < ProviderPropertyEntity > builder The builder to use for the operation."
  },
  "api/CG.Orange.Data.Maps.SettingFileEntityMap.html": {
    "href": "api/CG.Orange.Data.Maps.SettingFileEntityMap.html",
    "title": "Class SettingFileEntityMap",
    "keywords": "Class SettingFileEntityMap This class maps properties for the entity type. Inheritance System.Object AuditedEntityMapBase < SettingFileEntity > SettingFileEntityMap Inherited Members AuditedEntityMapBase<SettingFileEntity>._modelBuilder Namespace : CG.Orange.Data.Maps Assembly : CG.Orange.Data.dll Syntax class SettingFileEntityMap : AuditedEntityMapBase<SettingFileEntity> Constructors SettingFileEntityMap(ModelBuilder) This constructor creates a new instance of the SettingFileEntityMap class. Declaration public SettingFileEntityMap(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The model builder to use with this map. Methods Configure(EntityTypeBuilder<SettingFileEntity>) This method configures the entity. Declaration public override void Configure(EntityTypeBuilder<SettingFileEntity> builder) Parameters Type Name Description EntityTypeBuilder < SettingFileEntity > builder The builder to use for the operation. Overrides CG.Orange.Data.Maps.AuditedEntityMapBase<SettingFileEntity>.Configure(EntityTypeBuilder<SettingFileEntity>)"
  },
  "api/CG.Orange.Data.OrangeDbContext.html": {
    "href": "api/CG.Orange.Data.OrangeDbContext.html",
    "title": "Class OrangeDbContext",
    "keywords": "Class OrangeDbContext This class is a data-context for the CG.Orange microservice. Inheritance System.Object OrangeDbContext Namespace : CG.Orange.Data Assembly : CG.Orange.Data.dll Syntax public class OrangeDbContext : DbContext Constructors OrangeDbContext(DbContextOptions<OrangeDbContext>) This constructor creates a new instance of the OrangeDbContext class. Declaration public OrangeDbContext(DbContextOptions<OrangeDbContext> options) Parameters Type Name Description DbContextOptions < OrangeDbContext > options The options to use with this data-context. Properties ProviderProperties This property contains the list of provider properties. Declaration public virtual DbSet<ProviderPropertyEntity> ProviderProperties { get; set; } Property Value Type Description DbSet < ProviderPropertyEntity > Providers This property contains the list of providers. Declaration public virtual DbSet<ProviderEntity> Providers { get; set; } Property Value Type Description DbSet < ProviderEntity > SettingFiles This property contains the list of setting files. Declaration public virtual DbSet<SettingFileEntity> SettingFiles { get; set; } Property Value Type Description DbSet < SettingFileEntity > Methods OnModelCreating(ModelBuilder) This method is called to create the data model. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The builder to use for the operation."
  },
  "api/CG.Orange.Data.Repositories.html": {
    "href": "api/CG.Orange.Data.Repositories.html",
    "title": "Namespace CG.Orange.Data.Repositories",
    "keywords": "Namespace CG.Orange.Data.Repositories Classes ProviderPropertyRepository This class is an EFCORE implementation of the interface. ProviderRepository This class is an EFCORE implementation of the interface. SettingFileRepository This class is an EFCORE implementation of the interface."
  },
  "api/CG.Orange.Data.Repositories.ProviderPropertyRepository.html": {
    "href": "api/CG.Orange.Data.Repositories.ProviderPropertyRepository.html",
    "title": "Class ProviderPropertyRepository",
    "keywords": "Class ProviderPropertyRepository This class is an EFCORE implementation of the interface. Inheritance System.Object ProviderPropertyRepository Namespace : CG.Orange.Data.Repositories Assembly : CG.Orange.Data.dll Syntax class ProviderPropertyRepository : IProviderPropertyRepository Constructors ProviderPropertyRepository(OrangeDbContext, IMapper, ILogger<IProviderPropertyRepository>) This constructor creates a new instance of the ProviderPropertyRepository class. Declaration public ProviderPropertyRepository(OrangeDbContext dbContext, IMapper mapper, ILogger<IProviderPropertyRepository> logger) Parameters Type Name Description OrangeDbContext dbContext The EFCORE data-context to use with this repository. IMapper mapper The auto-mapper to use with this repository. ILogger < IProviderPropertyRepository > logger The logger to use with this repository. Fields _dbContext This field contains the EFCORE data-context for this repository. Declaration protected readonly OrangeDbContext _dbContext Field Value Type Description OrangeDbContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<IProviderPropertyRepository> _logger Field Value Type Description ILogger < IProviderPropertyRepository > _mapper This field contains the auto-mapper for this repository. Declaration protected readonly IMapper _mapper Field Value Type Description IMapper Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > AnyByProviderAsync(ProviderModel, CancellationToken) Declaration public virtual async Task<bool> AnyByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CountByProviderAsync(ProviderModel, CancellationToken) Declaration public virtual async Task<int> CountByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < System.Int32 > CreateAsync(ProviderPropertyModel, CancellationToken) Declaration public virtual async Task<ProviderPropertyModel> CreateAsync(ProviderPropertyModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel provider CancellationToken cancellationToken Returns Type Description Task < ProviderPropertyModel > DeleteAsync(ProviderPropertyModel, CancellationToken) Declaration public virtual async Task DeleteAsync(ProviderPropertyModel providerProperty, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<ProviderPropertyModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < ProviderPropertyModel >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<ProviderPropertyModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < ProviderPropertyModel >> FindByProviderAsync(ProviderModel, CancellationToken) Declaration public virtual async Task<IEnumerable<ProviderPropertyModel>> FindByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < IEnumerable < ProviderPropertyModel >> UpdateAsync(ProviderPropertyModel, CancellationToken) Declaration public virtual async Task<ProviderPropertyModel> UpdateAsync(ProviderPropertyModel providerProperty, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty CancellationToken cancellationToken Returns Type Description Task < ProviderPropertyModel >"
  },
  "api/CG.Orange.Data.Repositories.ProviderRepository.html": {
    "href": "api/CG.Orange.Data.Repositories.ProviderRepository.html",
    "title": "Class ProviderRepository",
    "keywords": "Class ProviderRepository This class is an EFCORE implementation of the interface. Inheritance System.Object ProviderRepository Namespace : CG.Orange.Data.Repositories Assembly : CG.Orange.Data.dll Syntax class ProviderRepository : IProviderRepository Constructors ProviderRepository(OrangeDbContext, IMapper, ILogger<IProviderRepository>) This constructor creates a new instance of the ProviderRepository class. Declaration public ProviderRepository(OrangeDbContext dbContext, IMapper mapper, ILogger<IProviderRepository> logger) Parameters Type Name Description OrangeDbContext dbContext The EFCORE data-context to use with this repository. IMapper mapper The auto-mapper to use with this repository. ILogger < IProviderRepository > logger The logger to use with this repository. Fields _dbContext This field contains the EFCORE data-context for this repository. Declaration protected readonly OrangeDbContext _dbContext Field Value Type Description OrangeDbContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<IProviderRepository> _logger Field Value Type Description ILogger < IProviderRepository > _mapper This field contains the auto-mapper for this repository. Declaration protected readonly IMapper _mapper Field Value Type Description IMapper Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(ProviderModel, CancellationToken) Declaration public virtual async Task<ProviderModel> CreateAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < ProviderModel > DeleteAsync(ProviderModel, CancellationToken) Declaration public virtual async Task DeleteAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<ProviderModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < ProviderModel >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<ProviderModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < ProviderModel >> FindByTagAndTypeAsync(String, Nullable<ProviderType>, CancellationToken) Declaration public virtual async Task<ProviderModel?> FindByTagAndTypeAsync(string tag, ProviderType? providerType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String tag System.Nullable < ProviderType > providerType CancellationToken cancellationToken Returns Type Description Task < System.Nullable < ProviderModel >> UpdateAsync(ProviderModel, CancellationToken) Declaration public virtual async Task<ProviderModel> UpdateAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < ProviderModel >"
  },
  "api/CG.Orange.Data.Repositories.SettingFileRepository.html": {
    "href": "api/CG.Orange.Data.Repositories.SettingFileRepository.html",
    "title": "Class SettingFileRepository",
    "keywords": "Class SettingFileRepository This class is an EFCORE implementation of the interface. Inheritance System.Object SettingFileRepository Namespace : CG.Orange.Data.Repositories Assembly : CG.Orange.Data.dll Syntax class SettingFileRepository : ISettingFileRepository Constructors SettingFileRepository(OrangeDbContext, IMapper, ILogger<ISettingFileRepository>) This constructor creates a new instance of the SettingFileRepository class. Declaration public SettingFileRepository(OrangeDbContext dbContext, IMapper mapper, ILogger<ISettingFileRepository> logger) Parameters Type Name Description OrangeDbContext dbContext The EFCORE data-context to use with this repository. IMapper mapper The auto-mapper to use with this repository. ILogger < ISettingFileRepository > logger The logger to use with this repository. Fields _dbContext This field contains the EFCORE data-context for this repository. Declaration protected readonly OrangeDbContext _dbContext Field Value Type Description OrangeDbContext _logger This field contains the logger for this repository. Declaration protected readonly ILogger<ISettingFileRepository> _logger Field Value Type Description ILogger < ISettingFileRepository > _mapper This field contains the auto-mapper for this repository. Declaration protected readonly IMapper _mapper Field Value Type Description IMapper Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > AnyAsync(String, String, CancellationToken) Declaration public virtual async Task<bool> AnyAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(SettingFileModel, CancellationToken) Declaration public virtual async Task<SettingFileModel> CreateAsync(SettingFileModel settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile CancellationToken cancellationToken Returns Type Description Task < SettingFileModel > DeleteAsync(SettingFileModel, CancellationToken) Declaration public virtual async Task DeleteAsync(SettingFileModel settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<SettingFileModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < SettingFileModel >> FindByApplicationAndEnvironmentAsync(String, String, CancellationToken) Declaration public virtual async Task<SettingFileModel?> FindByApplicationAndEnvironmentAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < System.Nullable < SettingFileModel >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<SettingFileModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < SettingFileModel >> UpdateAsync(SettingFileModel, CancellationToken) Declaration public virtual async Task<SettingFileModel> UpdateAsync(SettingFileModel settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile CancellationToken cancellationToken Returns Type Description Task < SettingFileModel >"
  },
  "api/CG.Orange.Data.Sqlite.html": {
    "href": "api/CG.Orange.Data.Sqlite.html",
    "title": "Namespace CG.Orange.Data.Sqlite",
    "keywords": "Namespace CG.Orange.Data.Sqlite Classes OrangeDbContextDesignTimeFactory This class is a SQLite design time factory for the OrangeDbContext data-context type."
  },
  "api/CG.Orange.Data.Sqlite.Migrations.html": {
    "href": "api/CG.Orange.Data.Sqlite.Migrations.html",
    "title": "Namespace CG.Orange.Data.Sqlite.Migrations",
    "keywords": "Namespace CG.Orange.Data.Sqlite.Migrations Classes InitialCreate OrangeDbContextModelSnapshot"
  },
  "api/CG.Orange.Data.Sqlite.Migrations.InitialCreate.html": {
    "href": "api/CG.Orange.Data.Sqlite.Migrations.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Data.Sqlite.Migrations Assembly : CG.Orange.Data.Sqlite.dll Syntax [DbContext(typeof(OrangeDbContext))] [Migration(\"20230104122445_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Orange.Data.Sqlite.Migrations.OrangeDbContextModelSnapshot.html": {
    "href": "api/CG.Orange.Data.Sqlite.Migrations.OrangeDbContextModelSnapshot.html",
    "title": "Class OrangeDbContextModelSnapshot",
    "keywords": "Class OrangeDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot OrangeDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Data.Sqlite.Migrations Assembly : CG.Orange.Data.Sqlite.dll Syntax [DbContext(typeof(OrangeDbContext))] class OrangeDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Orange.Data.Sqlite.OrangeDbContextDesignTimeFactory.html": {
    "href": "api/CG.Orange.Data.Sqlite.OrangeDbContextDesignTimeFactory.html",
    "title": "Class OrangeDbContextDesignTimeFactory",
    "keywords": "Class OrangeDbContextDesignTimeFactory This class is a SQLite design time factory for the OrangeDbContext data-context type. Inheritance System.Object OrangeDbContextDesignTimeFactory Namespace : CG.Orange.Data.Sqlite Assembly : CG.Orange.Data.Sqlite.dll Syntax class OrangeDbContextDesignTimeFactory : DesignTimeDbContextFactory<OrangeDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<OrangeDbContext>, IConfiguration) This method is overridden in order to configure the options for a Sqlite data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<OrangeDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < OrangeDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Orange.Data.SqlServer.html": {
    "href": "api/CG.Orange.Data.SqlServer.html",
    "title": "Namespace CG.Orange.Data.SqlServer",
    "keywords": "Namespace CG.Orange.Data.SqlServer Classes OrangeDbContextDesignTimeFactory This class is a SQLServer design time factory for the OrangeDbContext data-context type."
  },
  "api/CG.Orange.Data.SqlServer.InMemory.html": {
    "href": "api/CG.Orange.Data.SqlServer.InMemory.html",
    "title": "Namespace CG.Orange.Data.SqlServer.InMemory",
    "keywords": "Namespace CG.Orange.Data.SqlServer.InMemory Classes OrangeDbContextDesignTimeFactory This class is an in-memory design time factory for the OrangeDbContext data-context type."
  },
  "api/CG.Orange.Data.SqlServer.InMemory.OrangeDbContextDesignTimeFactory.html": {
    "href": "api/CG.Orange.Data.SqlServer.InMemory.OrangeDbContextDesignTimeFactory.html",
    "title": "Class OrangeDbContextDesignTimeFactory",
    "keywords": "Class OrangeDbContextDesignTimeFactory This class is an in-memory design time factory for the OrangeDbContext data-context type. Inheritance System.Object OrangeDbContextDesignTimeFactory Namespace : CG.Orange.Data.SqlServer.InMemory Assembly : CG.Orange.Data.InMemory.dll Syntax class OrangeDbContextDesignTimeFactory : DesignTimeDbContextFactory<OrangeDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<OrangeDbContext>, IConfiguration) This method is overridden in order to configure the options for an in-memory data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<OrangeDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < OrangeDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Orange.Data.SqlServer.Migrations.html": {
    "href": "api/CG.Orange.Data.SqlServer.Migrations.html",
    "title": "Namespace CG.Orange.Data.SqlServer.Migrations",
    "keywords": "Namespace CG.Orange.Data.SqlServer.Migrations Classes InitialCreate OrangeDbContextModelSnapshot"
  },
  "api/CG.Orange.Data.SqlServer.Migrations.InitialCreate.html": {
    "href": "api/CG.Orange.Data.SqlServer.Migrations.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Data.SqlServer.Migrations Assembly : CG.Orange.Data.SqlServer.dll Syntax [DbContext(typeof(OrangeDbContext))] [Migration(\"20230104122457_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Orange.Data.SqlServer.Migrations.OrangeDbContextModelSnapshot.html": {
    "href": "api/CG.Orange.Data.SqlServer.Migrations.OrangeDbContextModelSnapshot.html",
    "title": "Class OrangeDbContextModelSnapshot",
    "keywords": "Class OrangeDbContextModelSnapshot Inheritance System.Object Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot OrangeDbContextModelSnapshot Inherited Members Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.Model System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Data.SqlServer.Migrations Assembly : CG.Orange.Data.SqlServer.dll Syntax [DbContext(typeof(OrangeDbContext))] class OrangeDbContextModelSnapshot : ModelSnapshot Methods BuildModel(ModelBuilder) Declaration protected override void BuildModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.BuildModel(Microsoft.EntityFrameworkCore.ModelBuilder)"
  },
  "api/CG.Orange.Data.SqlServer.OrangeDbContextDesignTimeFactory.html": {
    "href": "api/CG.Orange.Data.SqlServer.OrangeDbContextDesignTimeFactory.html",
    "title": "Class OrangeDbContextDesignTimeFactory",
    "keywords": "Class OrangeDbContextDesignTimeFactory This class is a SQLServer design time factory for the OrangeDbContext data-context type. Inheritance System.Object OrangeDbContextDesignTimeFactory Namespace : CG.Orange.Data.SqlServer Assembly : CG.Orange.Data.SqlServer.dll Syntax class OrangeDbContextDesignTimeFactory : DesignTimeDbContextFactory<OrangeDbContext> Methods OnConfigureDataContextOptions(DbContextOptionsBuilder<OrangeDbContext>, IConfiguration) This method is overridden in order to configure the options for a SqlServer data-context instance. Declaration protected override void OnConfigureDataContextOptions(DbContextOptionsBuilder<OrangeDbContext> optionsBuilder, IConfiguration configuration) Parameters Type Name Description DbContextOptionsBuilder < OrangeDbContext > optionsBuilder The data-context options builder to use for the operation. IConfiguration configuration The configuration to use for the operation."
  },
  "api/CG.Orange.Directors.ConfigurationDirector.html": {
    "href": "api/CG.Orange.Directors.ConfigurationDirector.html",
    "title": "Class ConfigurationDirector",
    "keywords": "Class ConfigurationDirector This class is a default implementation of the IConfigurationDirector interface. Inheritance System.Object ConfigurationDirector Implements IConfigurationDirector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Directors Assembly : CG.Orange.dll Syntax class ConfigurationDirector : IConfigurationDirector Constructors ConfigurationDirector(IProcessorFactory, ISettingFileManager, IProviderManager, ILogger<IConfigurationDirector>) This constructor creates a new instance of the ConfigurationDirector class. Declaration public ConfigurationDirector(IProcessorFactory processorFactory, ISettingFileManager settingFileManager, IProviderManager providerManager, ILogger<IConfigurationDirector> logger) Parameters Type Name Description IProcessorFactory processorFactory The processor factory to use with this director. ISettingFileManager settingFileManager The setting file manager to use with this director. IProviderManager providerManager The provider manager to use with this director. ILogger < IConfigurationDirector > logger The logger to use with this director. Fields _logger This field contains the logger for this director. Declaration protected readonly ILogger<IConfigurationDirector> _logger Field Value Type Description ILogger < IConfigurationDirector > _processorFactory This field contains the processor factory for this director. Declaration protected readonly IProcessorFactory _processorFactory Field Value Type Description IProcessorFactory _providerManager This field contains the provider manager for this director. Declaration protected readonly IProviderManager _providerManager Field Value Type Description IProviderManager _settingFileManager This field contains the setting file manager for this director. Declaration protected readonly ISettingFileManager _settingFileManager Field Value Type Description ISettingFileManager Methods ReadConfigurationAsync(String, String, CancellationToken) Declaration public virtual async Task<Dictionary<string, string>> ReadConfigurationAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < Dictionary < System.String , System.String >> ReplaceTokensAsync(String, String, IConfigurationRoot, CancellationToken) This method scans through the given configuration replacing tokens with their associated secrets. Declaration async Task<Dictionary<string, string>> ReplaceTokensAsync(string applicationName, string environmentName, IConfigurationRoot source, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The name of the application to use for the operation. System.String environmentName The name of the environment to use for the operation. IConfigurationRoot source The source configuration to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < Dictionary < System.String , System.String >> A task to perform the operation that returns a dictionary of key-value-pairs. Implements IConfigurationDirector"
  },
  "api/CG.Orange.Directors.DirectorException.html": {
    "href": "api/CG.Orange.Directors.DirectorException.html",
    "title": "Class DirectorException",
    "keywords": "Class DirectorException This class represents a director related exception. Inheritance System.Object DirectorException Namespace : CG.Orange.Directors Assembly : CG.Orange.Primitives.dll Syntax public class DirectorException : Exception Constructors DirectorException() This constructor creates a new instance of the DirectorException class. Declaration public DirectorException() DirectorException(SerializationInfo, StreamingContext) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. DirectorException(String) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(string message) Parameters Type Name Description System.String message The message to use for the exception. DirectorException(String, Exception) This constructor creates a new instance of the DirectorException class. Declaration public DirectorException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Orange.Directors.html": {
    "href": "api/CG.Orange.Directors.html",
    "title": "Namespace CG.Orange.Directors",
    "keywords": "Namespace CG.Orange.Directors Classes ConfigurationDirector This class is a default implementation of the IConfigurationDirector interface. DirectorException This class represents a director related exception. SeedDirector This class is a default implementation of the ISeedDirector interface. Interfaces IConfigurationDirector This interface represent an object that reads complete configurations by combining data in the database with data in the cache, and data in remote secret locations we can't tell anyone about ... shhh!! ISeedDirector This interface represents an object that performs data seeding operations."
  },
  "api/CG.Orange.Directors.IConfigurationDirector.html": {
    "href": "api/CG.Orange.Directors.IConfigurationDirector.html",
    "title": "Interface IConfigurationDirector",
    "keywords": "Interface IConfigurationDirector This interface represent an object that reads complete configurations by combining data in the database with data in the cache, and data in remote secret locations we can't tell anyone about ... shhh!! Namespace : CG.Orange.Directors Assembly : CG.Orange.Abstractions.dll Syntax public interface IConfigurationDirector Methods ReadConfigurationAsync(String, String, CancellationToken) This method returns a complete configuration for the given application and/or environment - complete with associated secret values. Declaration Task<Dictionary<string, string>> ReadConfigurationAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The optional environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < Dictionary < System.String , System.String >> A task to perform the operation that returns a dictionary of key-value pairs, that comprise the configuration. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation."
  },
  "api/CG.Orange.Directors.ISeedDirector.html": {
    "href": "api/CG.Orange.Directors.ISeedDirector.html",
    "title": "Interface ISeedDirector",
    "keywords": "Interface ISeedDirector This interface represents an object that performs data seeding operations. Namespace : CG.Orange.Directors Assembly : CG.Orange.Abstractions.dll Syntax public interface ISeedDirector Methods SeedSettingFilesAsync(IConfiguration, String, Boolean, CancellationToken) This method performs a seeding operation for objects. Declaration Task SeedSettingFilesAsync(IConfiguration configuration, string userName, bool force = false, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration configuration The configuration to use for the operation. System.String userName The name of the user performing the operation. System.Boolean force true to force the seeding operation when there are existing objects in the underlying data-store; false otherwise. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition DirectorException This exception is thrown whenever the director fails to complete the operation."
  },
  "api/CG.Orange.Directors.SeedDirector.html": {
    "href": "api/CG.Orange.Directors.SeedDirector.html",
    "title": "Class SeedDirector",
    "keywords": "Class SeedDirector This class is a default implementation of the ISeedDirector interface. Inheritance System.Object SeedDirector Namespace : CG.Orange.Directors Assembly : CG.Orange.dll Syntax public class SeedDirector : SeedDirectorBase<SeedDirector> Constructors SeedDirector(IProviderManager, IProviderPropertyManager, ISettingFileManager, ILogger<SeedDirector>) This constructor creates a new instance of the SeedDirector class. Declaration public SeedDirector(IProviderManager providerManager, IProviderPropertyManager providerPropertyManager, ISettingFileManager settingFileManager, ILogger<SeedDirector> logger) Parameters Type Name Description IProviderManager providerManager The provider manager to use with this director. IProviderPropertyManager providerPropertyManager The provider parameter manager to use with this director. ISettingFileManager settingFileManager The setting file manager to use with this director. ILogger < SeedDirector > logger The logger to use with this director. Fields _providerManager This field contains the provider manager for this director. Declaration protected readonly IProviderManager _providerManager Field Value Type Description IProviderManager _providerPropertyManager This field contains the provider manager for this director. Declaration protected readonly IProviderPropertyManager _providerPropertyManager Field Value Type Description IProviderPropertyManager _settingFileManager This field contains the setting file manager for this director. Declaration protected readonly ISettingFileManager _settingFileManager Field Value Type Description ISettingFileManager Methods SeedFromConfiguration(String, IConfiguration, Boolean, String, CancellationToken) Declaration protected override async Task SeedFromConfiguration(string objectName, IConfiguration dataSection, bool force, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String objectName IConfiguration dataSection System.Boolean force System.String userName CancellationToken cancellationToken Returns Type Description Task SeedProvidersAsync(IConfiguration, Boolean, String, CancellationToken) This method performs a seeding operation for objects. Declaration async Task SeedProvidersAsync(IConfiguration dataSection, bool force, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedSettingFilesAsync(IConfiguration, Boolean, String, CancellationToken) This method performs a seeding operation for objects. Declaration async Task SeedSettingFilesAsync(IConfiguration dataSection, bool force, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description IConfiguration dataSection The data to use for the operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Globals.html": {
    "href": "api/CG.Orange.Globals.html",
    "title": "Class Globals",
    "keywords": "Class Globals This class contains global compile-time constants for the CG.Orange microservice. Inheritance System.Object Globals Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange Assembly : CG.Orange.Primitives.dll Syntax public static class Globals"
  },
  "api/CG.Orange.Globals.Models.AuditedModelBases.html": {
    "href": "api/CG.Orange.Globals.Models.AuditedModelBases.html",
    "title": "Class Globals.Models.AuditedModelBases",
    "keywords": "Class Globals.Models.AuditedModelBases This class contains sizes for properties. Inheritance System.Object Globals.Models.AuditedModelBases Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange Assembly : CG.Orange.Primitives.dll Syntax public static class AuditedModelBases Fields CreatedByLength This constant represents the length of the property. Declaration public const int CreatedByLength = 32 Field Value Type Description System.Int32 LastUpdatedByLength This constant represents the length of the property. Declaration public const int LastUpdatedByLength = 32 Field Value Type Description System.Int32"
  },
  "api/CG.Orange.Globals.Models.html": {
    "href": "api/CG.Orange.Globals.Models.html",
    "title": "Class Globals.Models",
    "keywords": "Class Globals.Models This class contains model property sizes. Inheritance System.Object Globals.Models Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange Assembly : CG.Orange.Primitives.dll Syntax public static class Models"
  },
  "api/CG.Orange.Globals.Models.Providers.html": {
    "href": "api/CG.Orange.Globals.Models.Providers.html",
    "title": "Class Globals.Models.Providers",
    "keywords": "Class Globals.Models.Providers This class contains sizes for properties. Inheritance System.Object Globals.Models.Providers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange Assembly : CG.Orange.Primitives.dll Syntax public static class Providers Fields DescriptionLength This constant represents the length of the property. Declaration public const int DescriptionLength = 255 Field Value Type Description System.Int32 NameLength This constant represents the length of the property. Declaration public const int NameLength = 32 Field Value Type Description System.Int32 ProcessorTypeLength This constant represents the length of the property. Declaration public const int ProcessorTypeLength = 2048 Field Value Type Description System.Int32 ProviderTypeLength This constant represents the length of the property. Declaration public const int ProviderTypeLength = 32 Field Value Type Description System.Int32 TagLength This constant represents the length of the property. Declaration public const int TagLength = 12 Field Value Type Description System.Int32"
  },
  "api/CG.Orange.Globals.Models.SettingFiles.html": {
    "href": "api/CG.Orange.Globals.Models.SettingFiles.html",
    "title": "Class Globals.Models.SettingFiles",
    "keywords": "Class Globals.Models.SettingFiles This class contains sizes for properties. Inheritance System.Object Globals.Models.SettingFiles Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange Assembly : CG.Orange.Primitives.dll Syntax public static class SettingFiles Fields ApplicationNameLength This constant represents the length of the property. Declaration public const int ApplicationNameLength = 32 Field Value Type Description System.Int32 EnvironmentNameLength This constant represents the length of the property. Declaration public const int EnvironmentNameLength = 32 Field Value Type Description System.Int32"
  },
  "api/CG.Orange.Host.Hubs.html": {
    "href": "api/CG.Orange.Host.Hubs.html",
    "title": "Namespace CG.Orange.Host.Hubs",
    "keywords": "Namespace CG.Orange.Host.Hubs Classes SignalRHub This class is a SignalR hub for the Orange client back channel."
  },
  "api/CG.Orange.Host.Hubs.SignalRHub.html": {
    "href": "api/CG.Orange.Host.Hubs.SignalRHub.html",
    "title": "Class SignalRHub",
    "keywords": "Class SignalRHub This class is a SignalR hub for the Orange client back channel. Inheritance System.Object SignalRHub Namespace : CG.Orange.Host.Hubs Assembly : CG.Orange.Host.dll Syntax public class SignalRHub : Hub Constructors SignalRHub() This constructor creates a new instance of the SignalRHub class. Declaration public SignalRHub() Methods OnChangedSettingAsync(String, String, CancellationToken) This method sends a changed notification. Declaration public async Task OnChangedSettingAsync(string application, string environment, CancellationToken cancellationToken = null) Parameters Type Name Description System.String application The application for the setting that was changed. System.String environment The optional environment for the setting that was changed. CancellationToken cancellationToken A cancellation token. Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Host.Options.HostedServicesOptions.html": {
    "href": "api/CG.Orange.Host.Options.HostedServicesOptions.html",
    "title": "Class HostedServicesOptions",
    "keywords": "Class HostedServicesOptions This class contains configuration settings for the hosted services portion of the Orange business logic layer. Inheritance System.Object HostedServicesOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Options Assembly : CG.Orange.Host.dll Syntax class HostedServicesOptions Properties WarmupService This property contains configuration settings for the warmup service. Declaration public WarmupServiceOptions WarmupService { get; set; } Property Value Type Description WarmupServiceOptions"
  },
  "api/CG.Orange.Host.Options.html": {
    "href": "api/CG.Orange.Host.Options.html",
    "title": "Namespace CG.Orange.Host.Options",
    "keywords": "Namespace CG.Orange.Host.Options Classes HostedServicesOptions This class contains configuration settings for the hosted services portion of the Orange business logic layer. WarmupServiceOptions This class contains configuration settings for the warmup service."
  },
  "api/CG.Orange.Host.Options.WarmupServiceOptions.html": {
    "href": "api/CG.Orange.Host.Options.WarmupServiceOptions.html",
    "title": "Class WarmupServiceOptions",
    "keywords": "Class WarmupServiceOptions This class contains configuration settings for the warmup service. Inheritance System.Object WarmupServiceOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Options Assembly : CG.Orange.Host.dll Syntax class WarmupServiceOptions Properties IsDisabled This property indicates whether the service is disabled, or not. Declaration public bool IsDisabled { get; set; } Property Value Type Description System.Boolean StartupDelay This property contains an optional startup delay for the service. Declaration public TimeSpan? StartupDelay { get; set; } Property Value Type Description System.Nullable < TimeSpan >"
  },
  "api/CG.Orange.Host.Pages.Account.html": {
    "href": "api/CG.Orange.Host.Pages.Account.html",
    "title": "Namespace CG.Orange.Host.Pages.Account",
    "keywords": "Namespace CG.Orange.Host.Pages.Account Classes LoginModel This class is the code-behind for the Login page."
  },
  "api/CG.Orange.Host.Pages.Account.LoginModel.html": {
    "href": "api/CG.Orange.Host.Pages.Account.LoginModel.html",
    "title": "Class LoginModel",
    "keywords": "Class LoginModel This class is the code-behind for the Login page. Inheritance System.Object LoginModel Namespace : CG.Orange.Host.Pages.Account Assembly : CG.Orange.Host.dll Syntax public class LoginModel : PageModel Methods OnGet(String) This method is called when the get receives a GET request. Declaration public async Task OnGet(string redirectUri) Parameters Type Name Description System.String redirectUri The redirect uri to use for the operation. Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Host.Pages.Admin.Providers.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Providers.html",
    "title": "Namespace CG.Orange.Host.Pages.Admin.Providers",
    "keywords": "Namespace CG.Orange.Host.Pages.Admin.Providers Classes Index This class is the code-behind for the Index page. Provider This class is the code-behind for the Provider page."
  },
  "api/CG.Orange.Host.Pages.Admin.Providers.Index.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Providers.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages.Admin.Providers Assembly : CG.Orange.Host.dll Syntax public class Index Fields _cacheProcessorTypes This field contains the list of cache processor types. Declaration protected IEnumerable<Type> _cacheProcessorTypes Field Value Type Description IEnumerable < Type > _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected readonly List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > _providers This field contains the list of providers. Declaration protected IEnumerable<ProviderModel> _providers Field Value Type Description IEnumerable < ProviderModel > _secretProcessorTypes This field contains the list of secret processor types. Declaration protected IEnumerable<Type> _secretProcessorTypes Field Value Type Description IEnumerable < Type > Properties DialogService This property contains the dialog service for the page. Declaration protected IDialogService DialogService { get; set; } Property Value Type Description IDialogService HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor Logger This property contains the logger for this page. Declaration protected ILogger<Index> Logger { get; set; } Property Value Type Description Microsoft.Extensions.Logging.ILogger < Index > NavigationManager This property contains the navigation manager for the page. Declaration protected NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager ProviderManager This property contains the provider manager for the page. Declaration protected IProviderManager ProviderManager { get; set; } Property Value Type Description IProviderManager SnackbarService This property contains the snackbar service for the page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar UserName This property contains the name of the current user, or the word 'anonymous' if nobody is currently authenticated. Declaration protected string UserName { get; } Property Value Type Description System.String Methods DisableProviderAsync(ProviderModel) This method disables the given provider. Declaration protected async Task DisableProviderAsync(ProviderModel provider) Parameters Type Name Description ProviderModel provider The provider to use for the operation. Returns Type Description Task A task to perform the operation. EnableProviderAsync(ProviderModel) This method enables the given provider. Declaration protected async Task EnableProviderAsync(ProviderModel provider) Parameters Type Name Description ProviderModel provider The provider to use for the operation. Returns Type Description Task A task to perform the operation. OnCreateAsync(ProviderType) This method creates a new provider. Declaration protected async Task OnCreateAsync(ProviderType providerType) Parameters Type Name Description ProviderType providerType The provider type to use for the operation. Returns Type Description Task A task to perform the operation. OnDeleteAsync(ProviderModel) This method deletes the given provider. Declaration protected async Task OnDeleteAsync(ProviderModel provider) Parameters Type Name Description ProviderModel provider The provider to use for the operation. Returns Type Description Task A task to perform the operation. OnInitializedAsync() This method is called to initialize the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Host.Pages.Admin.Providers.Provider.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Providers.Provider.html",
    "title": "Class Provider",
    "keywords": "Class Provider This class is the code-behind for the Provider page. Inheritance System.Object Provider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages.Admin.Providers Assembly : CG.Orange.Host.dll Syntax public class Provider Fields _cacheProcessorTypes This field contains all cache processor types. Declaration protected IEnumerable<Type> _cacheProcessorTypes Field Value Type Description IEnumerable < Type > _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > _model This field contains the model for the page. Declaration protected ProviderModel? _model Field Value Type Description System.Nullable < ProviderModel > _secretProcessorTypes This field contains all secret processor types. Declaration protected IEnumerable<Type> _secretProcessorTypes Field Value Type Description IEnumerable < Type > _tempProperty This field contains a temporary property model, used to restore a property when an edit is canceled. Declaration protected ProviderPropertyModel? _tempProperty Field Value Type Description System.Nullable < ProviderPropertyModel > Properties DialogService This property contains the dialog service for this page. Declaration protected IDialogService DialogService { get; set; } Property Value Type Description IDialogService HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor Logger This property contains the logger for this page. Declaration protected ILogger<Provider> Logger { get; set; } Property Value Type Description ILogger < Provider > NavigationManager This property contains the navigation manager for the page. Declaration protected NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager ProviderId This property contains the identifier for the provider. Declaration public int ProviderId { get; set; } Property Value Type Description System.Int32 ProviderManager This property contains the provider manager for the page. Declaration protected IProviderManager ProviderManager { get; set; } Property Value Type Description IProviderManager ProviderPropertyManager This property contains the provider property manager for the page. Declaration protected IProviderPropertyManager ProviderPropertyManager { get; set; } Property Value Type Description IProviderPropertyManager SnackbarService This property contains the snackbar service for the page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar UserName This property contains the name of the current user, or the word 'anonymous' if nobody is currently authenticated. Declaration protected string UserName { get; } Property Value Type Description System.String Methods OnBackupProperty(Object) This method is before a property is edited. Declaration protected void OnBackupProperty(object element) Parameters Type Name Description System.Object element The property to use for the operation. OnCommitProperty(Object) This method is called when changes to a property are committed. Declaration protected void OnCommitProperty(object element) Parameters Type Name Description System.Object element The property to use for the operation. OnCreatePropertyAsync() This method creates a new property. Declaration protected async Task OnCreatePropertyAsync() Returns Type Description Task A task to perform the operation. OnDeletePropertyAsync(ProviderPropertyModel) This method deletes the given property. Declaration protected async Task OnDeletePropertyAsync(ProviderPropertyModel providerProperty) Parameters Type Name Description ProviderPropertyModel providerProperty The provider property to use for the operation. Returns Type Description Task A task to perform the operation. OnInitializedAsync() This method is called to initialize the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation. OnProviderTypeChanged(Object) This method is called when the provider type changes. Declaration protected void OnProviderTypeChanged(object elements) Parameters Type Name Description System.Object elements The elements from MudBlazor OnRollbackProperty(Object) This method is called when a property edit is rolled back. Declaration protected void OnRollbackProperty(object element) Parameters Type Name Description System.Object element The property to use for the operation. OnValidSubmit() This method is called when the user submits the form. Declaration protected async Task OnValidSubmit() Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Host.Pages.Admin.Settings.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Settings.html",
    "title": "Namespace CG.Orange.Host.Pages.Admin.Settings",
    "keywords": "Namespace CG.Orange.Host.Pages.Admin.Settings Classes Index This class is the code-behind for the Index page. Setting This class is the code-behind for the Setting page."
  },
  "api/CG.Orange.Host.Pages.Admin.Settings.Index.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Settings.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages.Admin.Settings Assembly : CG.Orange.Host.dll Syntax public class Index Fields _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected readonly List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > _settings This field contains the list of settings. Declaration protected IEnumerable<SettingFileModel> _settings Field Value Type Description IEnumerable < SettingFileModel > Properties DialogService This property contains the dialog service for the page. Declaration protected IDialogService DialogService { get; set; } Property Value Type Description IDialogService HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor Hub This property contains the SignalR hub for the page. Declaration protected SignalRHub Hub { get; set; } Property Value Type Description SignalRHub Logger This property contains the logger for this page. Declaration protected ILogger<Index> Logger { get; set; } Property Value Type Description ILogger < Index > NavigationManager This property contains the navigation manager for the page. Declaration protected NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager SettingFileManager This property contains the setting file manager for the page. Declaration protected ISettingFileManager SettingFileManager { get; set; } Property Value Type Description ISettingFileManager SnackbarService This property contains the snackbar service for the page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar UserName This property contains the name of the current user, or the word 'anonymous' if nobody is currently authenticated. Declaration protected string UserName { get; } Property Value Type Description System.String Methods DisableSettingAsync(SettingFileModel) This method disables the given setting file. Declaration protected async Task DisableSettingAsync(SettingFileModel settingFile) Parameters Type Name Description SettingFileModel settingFile The settingFile to use for the operation. Returns Type Description Task A task to perform the operation. EnableSettingAsync(SettingFileModel) This method enables the given setting file. Declaration protected async Task EnableSettingAsync(SettingFileModel settingFile) Parameters Type Name Description SettingFileModel settingFile The setting file to use for the operation. Returns Type Description Task A task to perform the operation. GuessSomeNamesAsync(String) This method tries to guess an application and environment name based on the given file name. Declaration async Task<(string, string)> GuessSomeNamesAsync(string fileName) Parameters Type Name Description System.String fileName The name of a JSON file. Returns Type Description Task < System.ValueTuple < System.String , System.String >> A task to perform the operation that returns a tuple containing an application and environment name. OnCreateAsync() This method is called when the user creates a new setting file. Declaration protected async Task OnCreateAsync() Returns Type Description Task A task to perform the operation. OnDeleteAsync(SettingFileModel) This method is called to delete a setting file. Declaration protected async Task OnDeleteAsync(SettingFileModel file) Parameters Type Name Description SettingFileModel file Returns Type Description Task A task to perform the operation. OnFilesChangedAsync(IBrowserFile) This method is called when the user imports a setting file. Declaration protected async Task OnFilesChangedAsync(IBrowserFile file) Parameters Type Name Description IBrowserFile file Returns Type Description Task A task to perform the operation. OnInitializedAsync() This method is called to initialize the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation. ParseAndVerifyAsync(IBrowserFile) This file parses and verifies the structure of the JSON in the given object. Declaration async Task<string> ParseAndVerifyAsync(IBrowserFile file) Parameters Type Name Description IBrowserFile file The file to use for the operation. Returns Type Description Task < System.String > A task to perform the operation that returns the JSON contents of the file."
  },
  "api/CG.Orange.Host.Pages.Admin.Settings.Setting.html": {
    "href": "api/CG.Orange.Host.Pages.Admin.Settings.Setting.html",
    "title": "Class Setting",
    "keywords": "Class Setting This class is the code-behind for the Setting page. Inheritance System.Object Setting Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages.Admin.Settings Assembly : CG.Orange.Host.dll Syntax public class Setting Fields _crumbs This field contains a reference to breadcrumbs for the view. Declaration protected List<BreadcrumbItem> _crumbs Field Value Type Description List < BreadcrumbItem > _model This field contains the model for the page. Declaration protected SettingFileModel? _model Field Value Type Description System.Nullable < SettingFileModel > Properties DialogService This property contains the dialog service for the page. Declaration protected IDialogService DialogService { get; set; } Property Value Type Description IDialogService HttpContextAccessor This property contains the HTTP context accessor. Declaration protected IHttpContextAccessor HttpContextAccessor { get; set; } Property Value Type Description IHttpContextAccessor Hub This property contains the SignalR hub for the page. Declaration protected SignalRHub Hub { get; set; } Property Value Type Description SignalRHub Logger This property contains the logger for this page. Declaration protected ILogger<Setting> Logger { get; set; } Property Value Type Description ILogger < Setting > NavigationManager This property contains the navigation manager for the page. Declaration protected NavigationManager NavigationManager { get; set; } Property Value Type Description NavigationManager ProviderManager This property contains the provider manager for the page. Declaration protected IProviderManager ProviderManager { get; set; } Property Value Type Description IProviderManager SettingFileManager This property contains the setting file manager for the page. Declaration protected ISettingFileManager SettingFileManager { get; set; } Property Value Type Description ISettingFileManager SettingId This property contains the identifier for the setting. Declaration public int SettingId { get; set; } Property Value Type Description System.Int32 SnackbarService This property contains the snackbar service for the page. Declaration protected ISnackbar SnackbarService { get; set; } Property Value Type Description ISnackbar UserName This property contains the name of the current user, or the word 'anonymous' if nobody is currently authenticated. Declaration protected string UserName { get; } Property Value Type Description System.String Methods OnInitializedAsync() This method is called to initialize the page. Declaration protected override async Task OnInitializedAsync() Returns Type Description Task A task to perform the operation. OnValidateJsonAsync() This method is called to validate the JSON for the model. Declaration protected async Task<bool> OnValidateJsonAsync() Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if the JSON is valid, false otherwise. OnValidSubmitAsync() This method is called when the user submits the form. Declaration protected async Task OnValidSubmitAsync() Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Host.Pages.ErrorModel.html": {
    "href": "api/CG.Orange.Host.Pages.ErrorModel.html",
    "title": "Class ErrorModel",
    "keywords": "Class ErrorModel This class is the code-behind for the Error page. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel ErrorModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages Assembly : CG.Orange.Host.dll Syntax [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public class ErrorModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Constructors ErrorModel(ILogger<ErrorModel>) This constructor creates a new instance of the ErrorModel class. Declaration public ErrorModel(ILogger<ErrorModel> logger) Parameters Type Name Description ILogger < ErrorModel > logger The logger for this model Fields _logger This field contains the logger for this model. Declaration readonly ILogger<ErrorModel> _logger Field Value Type Description ILogger < ErrorModel > Properties RequestId This property contains the request identifier for this model. Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId This property indicates whether or not to show the RequestId property on the error page. Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean Methods OnGet() This method is called when the page receives an HTTP GET verb. Declaration public void OnGet() Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Orange.Host.Pages.Home.html": {
    "href": "api/CG.Orange.Host.Pages.Home.html",
    "title": "Namespace CG.Orange.Host.Pages.Home",
    "keywords": "Namespace CG.Orange.Host.Pages.Home Classes Index This class is the code-behind for the Index page."
  },
  "api/CG.Orange.Host.Pages.Home.Index.html": {
    "href": "api/CG.Orange.Host.Pages.Home.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index page. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.Pages.Home Assembly : CG.Orange.Host.dll Syntax public class Index"
  },
  "api/CG.Orange.Host.Pages.html": {
    "href": "api/CG.Orange.Host.Pages.html",
    "title": "Namespace CG.Orange.Host.Pages",
    "keywords": "Namespace CG.Orange.Host.Pages Classes ErrorModel This class is the code-behind for the Error page."
  },
  "api/CG.Orange.Host.Services.html": {
    "href": "api/CG.Orange.Host.Services.html",
    "title": "Namespace CG.Orange.Host.Services",
    "keywords": "Namespace CG.Orange.Host.Services Classes WarmupService The class is a hosted service that warms up the website, on startup."
  },
  "api/CG.Orange.Host.Services.WarmupService.html": {
    "href": "api/CG.Orange.Host.Services.WarmupService.html",
    "title": "Class WarmupService",
    "keywords": "Class WarmupService The class is a hosted service that warms up the website, on startup. Inheritance System.Object WarmupService Implements IDisposable Namespace : CG.Orange.Host.Services Assembly : CG.Orange.Host.dll Syntax class WarmupService : IHostedService Constructors WarmupService(IServiceProvider, IOptions<HostedServicesOptions>, ILogger<WarmupService>) This constructor creates a new instance of the WarmupService class. Declaration public WarmupService(IServiceProvider serviceProvider, IOptions<HostedServicesOptions> hostedServiceOptions, ILogger<WarmupService> logger) Parameters Type Name Description IServiceProvider serviceProvider The service provider to use with this service. IOptions < HostedServicesOptions > hostedServiceOptions The hosted service options to use with this service. ILogger < WarmupService > logger The logger to use with this service. Fields _cts This field contains a cancellation token source for this service. Declaration protected readonly CancellationTokenSource _cts Field Value Type Description CancellationTokenSource _executingTask This field contains the task for this service. Declaration protected Task? _executingTask Field Value Type Description System.Nullable < Task > _hostedServiceOptions This field contains the hosted service options for this service. Declaration protected readonly HostedServicesOptions _hostedServiceOptions Field Value Type Description HostedServicesOptions _logger This field contains the logger for this service. Declaration protected readonly ILogger<WarmupService> _logger Field Value Type Description ILogger < WarmupService > _serviceProvider This field contains the service provider for this service. Declaration protected readonly IServiceProvider _serviceProvider Field Value Type Description IServiceProvider Methods Dispose() This method disposes of managed resources. Declaration public virtual void Dispose() ExecuteAsync(CancellationToken) This method warms up the website. Declaration protected virtual async Task ExecuteAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. StartAsync(CancellationToken) This method starts the service. Declaration public virtual Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. StopAsync(CancellationToken) This method stops the service. Declaration public virtual async Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Implements IDisposable"
  },
  "api/CG.Orange.Host.Themes.DefaultTheme.html": {
    "href": "api/CG.Orange.Host.Themes.DefaultTheme.html",
    "title": "Class DefaultTheme",
    "keywords": "Class DefaultTheme This class represents the default MudBlazor UI theme. Inheritance System.Object DefaultTheme Namespace : CG.Orange.Host.Themes Assembly : CG.Orange.Host.dll Syntax class DefaultTheme : MudTheme Constructors DefaultTheme() This constructor creates a new instance of the DefaultTheme class. Declaration protected DefaultTheme() Fields _instance This field contains the singleton theme instance. Declaration static DefaultTheme _instance Field Value Type Description DefaultTheme Methods Instance() This method returns a singleton instance of DefaultTheme Declaration public static DefaultTheme Instance() Returns Type Description DefaultTheme The singleton instance of DefaultTheme"
  },
  "api/CG.Orange.Host.Themes.html": {
    "href": "api/CG.Orange.Host.Themes.html",
    "title": "Namespace CG.Orange.Host.Themes",
    "keywords": "Namespace CG.Orange.Host.Themes Classes DefaultTheme This class represents the default MudBlazor UI theme."
  },
  "api/CG.Orange.Host.ViewModels.ClientLoginRequest.html": {
    "href": "api/CG.Orange.Host.ViewModels.ClientLoginRequest.html",
    "title": "Class ClientLoginRequest",
    "keywords": "Class ClientLoginRequest This class represents a client login request. Inheritance System.Object ClientLoginRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.ViewModels Assembly : CG.Orange.Controllers.dll Syntax public class ClientLoginRequest Properties ClientId This property contains the client identifier for the request. Declaration public string ClientId { get; set; } Property Value Type Description System.String ClientSecret This property contains the client secret for the request. Declaration public string ClientSecret { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.Host.ViewModels.html": {
    "href": "api/CG.Orange.Host.ViewModels.html",
    "title": "Namespace CG.Orange.Host.ViewModels",
    "keywords": "Namespace CG.Orange.Host.ViewModels Classes ClientLoginRequest This class represents a client login request. SettingsRequestVM This class represents a request for configuration settings from a client provider."
  },
  "api/CG.Orange.Host.ViewModels.SettingsRequestVM.html": {
    "href": "api/CG.Orange.Host.ViewModels.SettingsRequestVM.html",
    "title": "Class SettingsRequestVM",
    "keywords": "Class SettingsRequestVM This class represents a request for configuration settings from a client provider. Inheritance System.Object SettingsRequestVM Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Host.ViewModels Assembly : CG.Orange.Controllers.dll Syntax public class SettingsRequestVM Properties Application This property contains the application for the settings. Declaration public string Application { get; set; } Property Value Type Description System.String Environment This property contains the optional environment for the settings. Declaration public string Environment { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.html": {
    "href": "api/CG.Orange.html",
    "title": "Namespace CG.Orange",
    "keywords": "Namespace CG.Orange Classes Globals This class contains global compile-time constants for the CG.Orange microservice. Globals.Models This class contains model property sizes. Globals.Models.AuditedModelBases This class contains sizes for properties. Globals.Models.Providers This class contains sizes for properties. Globals.Models.SettingFiles This class contains sizes for properties."
  },
  "api/CG.Orange.Managers.html": {
    "href": "api/CG.Orange.Managers.html",
    "title": "Namespace CG.Orange.Managers",
    "keywords": "Namespace CG.Orange.Managers Classes ManagerException This class represents a manager related exception. ProviderManager ProviderPropertyManager This class is a default implementation of the IProviderPropertyManager interface. SettingFileManager Interfaces IProviderManager This interface represents an object that manages operations related to objects. IProviderPropertyManager This interface represents an object that manages operations related to objects. ISettingFileManager This interface represents an object that manages operations related to objects."
  },
  "api/CG.Orange.Managers.IProviderManager.html": {
    "href": "api/CG.Orange.Managers.IProviderManager.html",
    "title": "Interface IProviderManager",
    "keywords": "Interface IProviderManager This interface represents an object that manages operations related to objects. Namespace : CG.Orange.Managers Assembly : CG.Orange.Abstractions.dll Syntax public interface IProviderManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(ProviderModel, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<ProviderModel> CreateAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(ProviderModel, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DisableAsync(ProviderModel, String, CancellationToken) This method disabled the provider. Declaration Task<ProviderModel> DisableAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The model to disable. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderModel > A task to perform the operation that returns the modified object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. EnableAsync(ProviderModel, String, CancellationToken) This method enables the provider. Declaration Task<ProviderModel> EnableAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The model to enable. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderModel > A task to perform the operation that returns the modified object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<ProviderModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < ProviderModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a matching object using the given identifier. Declaration Task<ProviderModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < ProviderModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByTagAndTypeAsync(String, Nullable<ProviderType>, CancellationToken) This method searches for a matching object using the given provider tag and an optional value. Declaration Task<ProviderModel?> FindByTagAndTypeAsync(string tag, ProviderType? providerType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String tag The provider tag to use for the operation. System.Nullable < ProviderType > providerType The optional provider type to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < ProviderModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(ProviderModel, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<ProviderModel> UpdateAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Orange.Managers.IProviderPropertyManager.html": {
    "href": "api/CG.Orange.Managers.IProviderPropertyManager.html",
    "title": "Interface IProviderPropertyManager",
    "keywords": "Interface IProviderPropertyManager This interface represents an object that manages operations related to objects. Namespace : CG.Orange.Managers Assembly : CG.Orange.Abstractions.dll Syntax public interface IProviderPropertyManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. AnyByProviderAsync(ProviderModel, CancellationToken) This method indicates whether there are any objects in the underlying storage that are associated with the given provider. Declaration Task<bool> AnyByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountByProviderAsync(ProviderModel, CancellationToken) This method counts the number of objects in the underlying storage that are associated with the given provider. Declaration Task<int> CountByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int32 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(ProviderPropertyModel, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<ProviderPropertyModel> CreateAsync(ProviderPropertyModel providerProperty, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderPropertyModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(ProviderPropertyModel, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(ProviderPropertyModel providerProperty, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<ProviderPropertyModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < ProviderPropertyModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a matching object using the given identifier. Declaration Task<ProviderPropertyModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < ProviderPropertyModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByProviderAsync(ProviderModel, CancellationToken) This method searches for all the objects that belong to the given provider. Declaration Task<IEnumerable<ProviderPropertyModel>> FindByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < ProviderPropertyModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(ProviderPropertyModel, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<ProviderPropertyModel> UpdateAsync(ProviderPropertyModel providerProperty, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderPropertyModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Orange.Managers.ISettingFileManager.html": {
    "href": "api/CG.Orange.Managers.ISettingFileManager.html",
    "title": "Interface ISettingFileManager",
    "keywords": "Interface ISettingFileManager This interface represents an object that manages operations related to objects. Namespace : CG.Orange.Managers Assembly : CG.Orange.Abstractions.dll Syntax public interface ISettingFileManager Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. AnyAsync(String, String, CancellationToken) This method indicates whether there are any objects in the underlying storage that match the given application and environment names. Declaration Task<bool> AnyAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. CreateAsync(SettingFileModel, String, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<SettingFileModel> CreateAsync(SettingFileModel settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile The model to create in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFileModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DeleteAsync(SettingFileModel, String, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(SettingFileModel settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile The model to delete from the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. DisableAsync(SettingFileModel, String, CancellationToken) This method disabled the setting file. Declaration Task<SettingFileModel> DisableAsync(SettingFileModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel provider The model to disable. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFileModel > A task to perform the operation that returns the modified object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. EnableAsync(SettingFileModel, String, CancellationToken) This method enables the setting file. Declaration Task<SettingFileModel> EnableAsync(SettingFileModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel provider The model to enable. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFileModel > A task to perform the operation that returns the modified object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<SettingFileModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < SettingFileModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByApplicationAndEnvironmentAsync(String, String, CancellationToken) This method searches for a matching object using the given application and environment names. Declaration Task<SettingFileModel?> FindByApplicationAndEnvironmentAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < SettingFileModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a matching object using the given identifier. Declaration Task<SettingFileModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < SettingFileModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation. UpdateAsync(SettingFileModel, String, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<SettingFileModel> UpdateAsync(SettingFileModel settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile The model to update in the underlying storage. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFileModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition ManagerException This exception is thrown whenever the manager fails to complete the operation."
  },
  "api/CG.Orange.Managers.ManagerException.html": {
    "href": "api/CG.Orange.Managers.ManagerException.html",
    "title": "Class ManagerException",
    "keywords": "Class ManagerException This class represents a manager related exception. Inheritance System.Object ManagerException Namespace : CG.Orange.Managers Assembly : CG.Orange.Primitives.dll Syntax public class ManagerException : Exception Constructors ManagerException() This constructor creates a new instance of the ManagerException class. Declaration public ManagerException() ManagerException(SerializationInfo, StreamingContext) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. ManagerException(String) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(string message) Parameters Type Name Description System.String message The message to use for the exception. ManagerException(String, Exception) This constructor creates a new instance of the ManagerException class. Declaration public ManagerException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Orange.Managers.ProviderManager.html": {
    "href": "api/CG.Orange.Managers.ProviderManager.html",
    "title": "Class ProviderManager",
    "keywords": "Class ProviderManager Inheritance System.Object ProviderManager Implements IProviderManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Managers Assembly : CG.Orange.dll Syntax class ProviderManager : IProviderManager Constructors ProviderManager(ICryptographer, IProviderRepository, ILogger<IProviderManager>) This constructor creates a new instance of the ProviderManager class. Declaration public ProviderManager(ICryptographer cryptographer, IProviderRepository providerRepository, ILogger<IProviderManager> logger) Parameters Type Name Description ICryptographer cryptographer The cryptographer to use with this manager. IProviderRepository providerRepository The provider repository to use with this manager. ILogger < IProviderManager > logger The logger to use with this manager. Fields _cryptographer This field contains the cryptographer for this manager. Declaration protected readonly ICryptographer _cryptographer Field Value Type Description ICryptographer _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IProviderManager> _logger Field Value Type Description ILogger < IProviderManager > _providerRepository This field contains the repository for this manager. Declaration protected readonly IProviderRepository _providerRepository Field Value Type Description IProviderRepository Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(ProviderModel, String, CancellationToken) Declaration public virtual async Task<ProviderModel> CreateAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider System.String userName CancellationToken cancellationToken Returns Type Description Task < ProviderModel > DeleteAsync(ProviderModel, String, CancellationToken) Declaration public virtual async Task DeleteAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider System.String userName CancellationToken cancellationToken Returns Type Description Task DisableAsync(ProviderModel, String, CancellationToken) Declaration public virtual async Task<ProviderModel> DisableAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider System.String userName CancellationToken cancellationToken Returns Type Description Task < ProviderModel > EnableAsync(ProviderModel, String, CancellationToken) Declaration public virtual async Task<ProviderModel> EnableAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider System.String userName CancellationToken cancellationToken Returns Type Description Task < ProviderModel > FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<ProviderModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < ProviderModel >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<ProviderModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < ProviderModel >> FindByTagAndTypeAsync(String, Nullable<ProviderType>, CancellationToken) Declaration public virtual async Task<ProviderModel?> FindByTagAndTypeAsync(string tag, ProviderType? providerType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String tag System.Nullable < ProviderType > providerType CancellationToken cancellationToken Returns Type Description Task < System.Nullable < ProviderModel >> UpdateAsync(ProviderModel, String, CancellationToken) Declaration public virtual async Task<ProviderModel> UpdateAsync(ProviderModel provider, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider System.String userName CancellationToken cancellationToken Returns Type Description Task < ProviderModel > Implements IProviderManager"
  },
  "api/CG.Orange.Managers.ProviderPropertyManager.html": {
    "href": "api/CG.Orange.Managers.ProviderPropertyManager.html",
    "title": "Class ProviderPropertyManager",
    "keywords": "Class ProviderPropertyManager This class is a default implementation of the IProviderPropertyManager interface. Inheritance System.Object ProviderPropertyManager Implements IProviderPropertyManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Managers Assembly : CG.Orange.dll Syntax class ProviderPropertyManager : IProviderPropertyManager Constructors ProviderPropertyManager(ICryptographer, IProviderPropertyRepository, ILogger<IProviderPropertyManager>) This constructor creates a new instance of the ProviderPropertyManager class. Declaration public ProviderPropertyManager(ICryptographer cryptographer, IProviderPropertyRepository providerPropertyRepository, ILogger<IProviderPropertyManager> logger) Parameters Type Name Description ICryptographer cryptographer The cryptographer to use with this manager. IProviderPropertyRepository providerPropertyRepository The providerProperty property repository to use with this manager. ILogger < IProviderPropertyManager > logger The logger to use with this manager. Fields _cryptographer This field contains the cryptographer for this manager. Declaration protected readonly ICryptographer _cryptographer Field Value Type Description ICryptographer _logger This field contains the logger for this manager. Declaration protected readonly ILogger<IProviderPropertyManager> _logger Field Value Type Description ILogger < IProviderPropertyManager > _providerPropertyRepository This field contains the repository for this manager. Declaration protected readonly IProviderPropertyRepository _providerPropertyRepository Field Value Type Description IProviderPropertyRepository Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > AnyByProviderAsync(ProviderModel, CancellationToken) Declaration public virtual async Task<bool> AnyByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CountByProviderAsync(ProviderModel, CancellationToken) Declaration public virtual async Task<int> CountByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < System.Int32 > CreateAsync(ProviderPropertyModel, String, CancellationToken) Declaration public virtual async Task<ProviderPropertyModel> CreateAsync(ProviderPropertyModel providerProperty, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty System.String userName CancellationToken cancellationToken Returns Type Description Task < ProviderPropertyModel > DeleteAsync(ProviderPropertyModel, String, CancellationToken) Declaration public virtual async Task DeleteAsync(ProviderPropertyModel providerProperty, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty System.String userName CancellationToken cancellationToken Returns Type Description Task FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<ProviderPropertyModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < ProviderPropertyModel >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<ProviderPropertyModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < ProviderPropertyModel >> FindByProviderAsync(ProviderModel, CancellationToken) Declaration public virtual async Task<IEnumerable<ProviderPropertyModel>> FindByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < IEnumerable < ProviderPropertyModel >> UpdateAsync(ProviderPropertyModel, String, CancellationToken) Declaration public virtual async Task<ProviderPropertyModel> UpdateAsync(ProviderPropertyModel providerProperty, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty System.String userName CancellationToken cancellationToken Returns Type Description Task < ProviderPropertyModel > Implements IProviderPropertyManager"
  },
  "api/CG.Orange.Managers.SettingFileManager.html": {
    "href": "api/CG.Orange.Managers.SettingFileManager.html",
    "title": "Class SettingFileManager",
    "keywords": "Class SettingFileManager Inheritance System.Object SettingFileManager Implements ISettingFileManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Managers Assembly : CG.Orange.dll Syntax class SettingFileManager : ISettingFileManager Constructors SettingFileManager(ISettingFileRepository, ILogger<ISettingFileManager>) This constructor creates a new instance of the SettingFileManager class. Declaration public SettingFileManager(ISettingFileRepository settingFileRepository, ILogger<ISettingFileManager> logger) Parameters Type Name Description ISettingFileRepository settingFileRepository The setting file repository to use with this manager. ILogger < ISettingFileManager > logger The logger to use with this manager. Fields _logger This field contains the logger for this manager. Declaration protected readonly ILogger<ISettingFileManager> _logger Field Value Type Description ILogger < ISettingFileManager > _settingFileRepository This field contains the repository for this manager. Declaration protected readonly ISettingFileRepository _settingFileRepository Field Value Type Description ISettingFileRepository Methods AnyAsync(CancellationToken) Declaration public virtual async Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > AnyAsync(String, String, CancellationToken) Declaration public virtual async Task<bool> AnyAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < System.Boolean > CountAsync(CancellationToken) Declaration public virtual async Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int64 > CreateAsync(SettingFileModel, String, CancellationToken) Declaration public virtual async Task<SettingFileModel> CreateAsync(SettingFileModel settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile System.String userName CancellationToken cancellationToken Returns Type Description Task < SettingFileModel > DeleteAsync(SettingFileModel, String, CancellationToken) Declaration public virtual async Task DeleteAsync(SettingFileModel settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile System.String userName CancellationToken cancellationToken Returns Type Description Task DisableAsync(SettingFileModel, String, CancellationToken) Declaration public virtual async Task<SettingFileModel> DisableAsync(SettingFileModel settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile System.String userName CancellationToken cancellationToken Returns Type Description Task < SettingFileModel > EnableAsync(SettingFileModel, String, CancellationToken) Declaration public virtual async Task<SettingFileModel> EnableAsync(SettingFileModel settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile System.String userName CancellationToken cancellationToken Returns Type Description Task < SettingFileModel > FindAllAsync(CancellationToken) Declaration public virtual async Task<IEnumerable<SettingFileModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEnumerable < SettingFileModel >> FindByApplicationAndEnvironmentAsync(String, String, CancellationToken) Declaration public virtual async Task<SettingFileModel?> FindByApplicationAndEnvironmentAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName System.String environmentName CancellationToken cancellationToken Returns Type Description Task < System.Nullable < SettingFileModel >> FindByIdAsync(Int32, CancellationToken) Declaration public virtual async Task<SettingFileModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id CancellationToken cancellationToken Returns Type Description Task < System.Nullable < SettingFileModel >> UpdateAsync(SettingFileModel, String, CancellationToken) Declaration public virtual async Task<SettingFileModel> UpdateAsync(SettingFileModel settingFile, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile System.String userName CancellationToken cancellationToken Returns Type Description Task < SettingFileModel > Implements ISettingFileManager"
  },
  "api/CG.Orange.Models.AuditedModelBase.html": {
    "href": "api/CG.Orange.Models.AuditedModelBase.html",
    "title": "Class AuditedModelBase",
    "keywords": "Class AuditedModelBase This class represents a base model with audit properties. Inheritance System.Object AuditedModelBase ProviderModel ProviderPropertyModel SettingFileModel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Primitives.dll Syntax public class AuditedModelBase Properties CreatedBy This property contains the name of the person who created the model. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedOnUtc This property contains the date/time when the model was created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime LastUpdatedBy This property contains the name of the last person to update the model. Declaration public string LastUpdatedBy { get; set; } Property Value Type Description System.String LastUpdatedOnUtc This property contains the date/time when the model was last updated. Declaration public DateTime? LastUpdatedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/CG.Orange.Models.html": {
    "href": "api/CG.Orange.Models.html",
    "title": "Namespace CG.Orange.Models",
    "keywords": "Namespace CG.Orange.Models Classes AuditedModelBase This class represents a base model with audit properties. ProviderModel This class represents a provider. ProviderModelExtensions This class contains extension methods related to the ProviderModel type. ProviderPropertyModel This class represents a property for a provider. SettingFileExtensions This class contains extension methods related to the SettingFileModel type. SettingFileModel This class represents a JSON settings file. Enums ProviderType This enumeration lists the various provider types."
  },
  "api/CG.Orange.Models.ProviderModel.html": {
    "href": "api/CG.Orange.Models.ProviderModel.html",
    "title": "Class ProviderModel",
    "keywords": "Class ProviderModel This class represents a provider. Inheritance System.Object AuditedModelBase ProviderModel Inherited Members AuditedModelBase.CreatedBy AuditedModelBase.CreatedOnUtc AuditedModelBase.LastUpdatedBy AuditedModelBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Primitives.dll Syntax public class ProviderModel : AuditedModelBase Properties Description This property contains the optional description for the provider. Declaration public string Description { get; set; } Property Value Type Description System.String Id This property contains the identifier for the provider. Declaration public int Id { get; set; } Property Value Type Description System.Int32 IsDisabled This property indicates whether the provider is disabled, or not. Declaration public bool IsDisabled { get; set; } Property Value Type Description System.Boolean Name This property contains the name for the provider. Declaration public string Name { get; set; } Property Value Type Description System.String ProcessorType This property contains the .NET type for the associated processor. Declaration public string ProcessorType { get; set; } Property Value Type Description System.String Properties This property contains the associated properties for the provider. Declaration public List<ProviderPropertyModel> Properties { get; set; } Property Value Type Description List < ProviderPropertyModel > ProviderType This property contains the provider type. Declaration public ProviderType ProviderType { get; set; } Property Value Type Description ProviderType Tag This property contains the tag for the provider. Declaration public string Tag { get; set; } Property Value Type Description System.String Extension Methods ProviderModelExtensions.UniqueKeyName(ProviderModel)"
  },
  "api/CG.Orange.Models.ProviderModelExtensions.html": {
    "href": "api/CG.Orange.Models.ProviderModelExtensions.html",
    "title": "Class ProviderModelExtensions",
    "keywords": "Class ProviderModelExtensions This class contains extension methods related to the ProviderModel type. Inheritance System.Object ProviderModelExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Abstractions.dll Syntax public static class ProviderModelExtensions Methods UniqueKeyName(ProviderModel) This method generates a unique (temporary) key name for the given provider. Declaration public static string UniqueKeyName(this ProviderModel provider) Parameters Type Name Description ProviderModel provider The provider to use for the operation. Returns Type Description System.String A unique key name."
  },
  "api/CG.Orange.Models.ProviderPropertyModel.html": {
    "href": "api/CG.Orange.Models.ProviderPropertyModel.html",
    "title": "Class ProviderPropertyModel",
    "keywords": "Class ProviderPropertyModel This class represents a property for a provider. Inheritance System.Object AuditedModelBase ProviderPropertyModel Inherited Members AuditedModelBase.CreatedBy AuditedModelBase.CreatedOnUtc AuditedModelBase.LastUpdatedBy AuditedModelBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Primitives.dll Syntax public class ProviderPropertyModel : AuditedModelBase Properties Id This property contains the unique identifier for the property. Declaration public int Id { get; set; } Property Value Type Description System.Int32 Key This property contains the key for the property. Declaration public string Key { get; set; } Property Value Type Description System.String Provider This property contains the associated provider. Declaration public ProviderModel Provider { get; set; } Property Value Type Description ProviderModel ProviderId This property contains the identifier for the associated provider. Declaration public int ProviderId { get; set; } Property Value Type Description System.Int32 Value This property contains the value for the property. Declaration public string Value { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.Models.ProviderType.html": {
    "href": "api/CG.Orange.Models.ProviderType.html",
    "title": "Enum ProviderType",
    "keywords": "Enum ProviderType This enumeration lists the various provider types. Namespace : CG.Orange.Models Assembly : CG.Orange.Primitives.dll Syntax public enum ProviderType Fields Name Description Cache This provider supplies cache policies. Secret This provider supplies secret values."
  },
  "api/CG.Orange.Models.SettingFileExtensions.html": {
    "href": "api/CG.Orange.Models.SettingFileExtensions.html",
    "title": "Class SettingFileExtensions",
    "keywords": "Class SettingFileExtensions This class contains extension methods related to the SettingFileModel type. Inheritance System.Object SettingFileExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Host.dll Syntax public static class SettingFileExtensions Methods SafeEnvironmentName(SettingFileModel) This method returns an environment name that is safe to use from Blazor pages. Declaration public static string SafeEnvironmentName(this SettingFileModel settingFile) Parameters Type Name Description SettingFileModel settingFile The setting file to use for the operation. Returns Type Description System.String A safe string."
  },
  "api/CG.Orange.Models.SettingFileModel.html": {
    "href": "api/CG.Orange.Models.SettingFileModel.html",
    "title": "Class SettingFileModel",
    "keywords": "Class SettingFileModel This class represents a JSON settings file. Inheritance System.Object AuditedModelBase SettingFileModel Inherited Members AuditedModelBase.CreatedBy AuditedModelBase.CreatedOnUtc AuditedModelBase.LastUpdatedBy AuditedModelBase.LastUpdatedOnUtc System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Models Assembly : CG.Orange.Primitives.dll Syntax public class SettingFileModel : AuditedModelBase Properties ApplicationName This property contains the application name for the settings. Declaration public string ApplicationName { get; set; } Property Value Type Description System.String EnvironmentName This property contains the optional environment name for the settings. Declaration public string EnvironmentName { get; set; } Property Value Type Description System.String Id This property contains the identifier for the settings. Declaration public int Id { get; set; } Property Value Type Description System.Int32 IsDisabled This property indicates whether the settings are disabled, or not. Declaration public bool IsDisabled { get; set; } Property Value Type Description System.Boolean Json This property contains the JSON for the settings. Declaration public string Json { get; set; } Property Value Type Description System.String Extension Methods SettingFileExtensions.SafeEnvironmentName(SettingFileModel)"
  },
  "api/CG.Orange.Options.html": {
    "href": "api/CG.Orange.Options.html",
    "title": "Namespace CG.Orange.Options",
    "keywords": "Namespace CG.Orange.Options Classes OrangeBllOptions This class contains configuration settings for the Orange business logic layer. OrangeIdentityOptions This class contains configuration settings for Orange identity layer. ProviderOptions This class contains configuration settings related to seeding objects. SettingFileOptions This class contains configuration settings related to seeding objects."
  },
  "api/CG.Orange.Options.OrangeBllOptions.html": {
    "href": "api/CG.Orange.Options.OrangeBllOptions.html",
    "title": "Class OrangeBllOptions",
    "keywords": "Class OrangeBllOptions This class contains configuration settings for the Orange business logic layer. Inheritance System.Object OrangeBllOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Options Assembly : CG.Orange.Primitives.dll Syntax public class OrangeBllOptions"
  },
  "api/CG.Orange.Options.OrangeIdentityOptions.html": {
    "href": "api/CG.Orange.Options.OrangeIdentityOptions.html",
    "title": "Class OrangeIdentityOptions",
    "keywords": "Class OrangeIdentityOptions This class contains configuration settings for Orange identity layer. Inheritance System.Object OrangeIdentityOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Options Assembly : CG.Orange.Primitives.dll Syntax public class OrangeIdentityOptions Properties Authority This property contains the URL for the identity authority. Declaration public string Authority { get; set; } Property Value Type Description System.String ClientId This property contains the client identifier. Declaration public string ClientId { get; set; } Property Value Type Description System.String ClientSecret This property contains the client secret. Declaration public string ClientSecret { get; set; } Property Value Type Description System.String CookieName This property contains the cookie name. Declaration public string CookieName { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Orange.Options.ProviderOptions.html": {
    "href": "api/CG.Orange.Options.ProviderOptions.html",
    "title": "Class ProviderOptions",
    "keywords": "Class ProviderOptions This class contains configuration settings related to seeding objects. Inheritance System.Object ProviderOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Options Assembly : CG.Orange.dll Syntax class ProviderOptions Properties Providers This property contains a list of objects to seed. Declaration public List<ProviderModel> Providers { get; set; } Property Value Type Description List < ProviderModel >"
  },
  "api/CG.Orange.Options.SettingFileOptions.html": {
    "href": "api/CG.Orange.Options.SettingFileOptions.html",
    "title": "Class SettingFileOptions",
    "keywords": "Class SettingFileOptions This class contains configuration settings related to seeding objects. Inheritance System.Object SettingFileOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Options Assembly : CG.Orange.dll Syntax class SettingFileOptions Properties SettingFiles This property contains a list of objects to seed. Declaration public List<SettingFileModel> SettingFiles { get; set; } Property Value Type Description List < SettingFileModel >"
  },
  "api/CG.Orange.Plugins.Azure.AzureSecretClientFactory.html": {
    "href": "api/CG.Orange.Plugins.Azure.AzureSecretClientFactory.html",
    "title": "Class AzureSecretClientFactory",
    "keywords": "Class AzureSecretClientFactory This class is a factory for creating instances. Inheritance System.Object AzureSecretClientFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Plugins.Azure Assembly : CG.Orange.Plugins.Azure.dll Syntax class AzureSecretClientFactory Methods CreateAsync(ProviderModel, CancellationToken) This method creates a new instance. Declaration public virtual Task<SecretClient> CreateAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SecretClient > A task to perform the operation that returns a new instance."
  },
  "api/CG.Orange.Plugins.Azure.AzureSecretProcessor.html": {
    "href": "api/CG.Orange.Plugins.Azure.AzureSecretProcessor.html",
    "title": "Class AzureSecretProcessor",
    "keywords": "Class AzureSecretProcessor This class is an Azure implementation of the interface. Inheritance System.Object AzureSecretProcessor Namespace : CG.Orange.Plugins.Azure Assembly : CG.Orange.Plugins.Azure.dll Syntax class AzureSecretProcessor : ISecretProcessor Constructors AzureSecretProcessor(AzureSecretClientFactory, ILogger<AzureSecretProcessor>) This constructor creates a new instance of the AzureSecretProcessor class. Declaration public AzureSecretProcessor(AzureSecretClientFactory secretClientFactory, ILogger<AzureSecretProcessor> logger) Parameters Type Name Description AzureSecretClientFactory secretClientFactory The Azure secret client factory to use with this processor. ILogger < AzureSecretProcessor > logger The logger to use with this processor. Fields _logger This field contains the logger for this processor. Declaration protected readonly ILogger<AzureSecretProcessor> _logger Field Value Type Description ILogger < AzureSecretProcessor > _secretClientFactory This field contains the Azure secret client factory for this processor. Declaration protected readonly AzureSecretClientFactory _secretClientFactory Field Value Type Description AzureSecretClientFactory Methods GetValueAsync(ProviderModel, String, CancellationToken) Declaration public virtual async Task<string> GetValueAsync(ProviderModel provider, string secretKey, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider System.String secretKey CancellationToken cancellationToken Returns Type Description Task < System.String >"
  },
  "api/CG.Orange.Plugins.Azure.html": {
    "href": "api/CG.Orange.Plugins.Azure.html",
    "title": "Namespace CG.Orange.Plugins.Azure",
    "keywords": "Namespace CG.Orange.Plugins.Azure Classes AzureSecretClientFactory This class is a factory for creating instances. AzureSecretProcessor This class is an Azure implementation of the interface. Module This class represents the plugin module's startup logic."
  },
  "api/CG.Orange.Plugins.Azure.Module.html": {
    "href": "api/CG.Orange.Plugins.Azure.Module.html",
    "title": "Class Module",
    "keywords": "Class Module This class represents the plugin module's startup logic. Inheritance System.Object Module Namespace : CG.Orange.Plugins.Azure Assembly : CG.Orange.Plugins.Azure.dll Syntax public class Module : ModuleBase Methods Configure(WebApplication) Declaration public override void Configure(WebApplication webApplication) Parameters Type Name Description WebApplication webApplication ConfigureServices(WebApplicationBuilder, IConfiguration, Nullable<ILogger>) Declaration public override void ConfigureServices(WebApplicationBuilder webApplicationBuilder, IConfiguration configuration, ILogger? bootstrapLogger) Parameters Type Name Description WebApplicationBuilder webApplicationBuilder IConfiguration configuration System.Nullable < ILogger > bootstrapLogger"
  },
  "api/CG.Orange.Plugins.Azure.Options.AzureSecretProcessorOptions.html": {
    "href": "api/CG.Orange.Plugins.Azure.Options.AzureSecretProcessorOptions.html",
    "title": "Class AzureSecretProcessorOptions",
    "keywords": "Class AzureSecretProcessorOptions This class contains configuration settings for the Azure secret processor. Inheritance System.Object AzureSecretProcessorOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Plugins.Azure.Options Assembly : CG.Orange.Plugins.Azure.dll Syntax class AzureSecretProcessorOptions"
  },
  "api/CG.Orange.Plugins.Azure.Options.html": {
    "href": "api/CG.Orange.Plugins.Azure.Options.html",
    "title": "Namespace CG.Orange.Plugins.Azure.Options",
    "keywords": "Namespace CG.Orange.Plugins.Azure.Options Classes AzureSecretProcessorOptions This class contains configuration settings for the Azure secret processor."
  },
  "api/CG.Orange.Plugins.Caching.CacheProcessor.html": {
    "href": "api/CG.Orange.Plugins.Caching.CacheProcessor.html",
    "title": "Class CacheProcessor",
    "keywords": "Class CacheProcessor This class is an in-memory implementation of the interface. Inheritance System.Object CacheProcessor Namespace : CG.Orange.Plugins.Caching Assembly : CG.Orange.Plugins.Caching.dll Syntax class CacheProcessor : ICacheProcessor Constructors CacheProcessor(IDistributedCache, ILogger<ICacheProcessor>) This constructor creates a new instance of the CacheProcessor class. Declaration public CacheProcessor(IDistributedCache cache, ILogger<ICacheProcessor> logger) Parameters Type Name Description IDistributedCache cache The cache to use with this processor. ILogger < ICacheProcessor > logger The logger to use with this processor. Fields _cache This field contains the cache for this processor. Declaration protected readonly IDistributedCache _cache Field Value Type Description IDistributedCache _logger This field contains the logger for this processor. Declaration protected readonly ILogger<ICacheProcessor> _logger Field Value Type Description ILogger < ICacheProcessor > Methods GetValueAsync(ProviderModel, String, CancellationToken) Declaration public virtual async Task<string> GetValueAsync(ProviderModel provider, string key, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider System.String key CancellationToken cancellationToken Returns Type Description Task < System.String > SetValueAsync(ProviderModel, String, String, CancellationToken) Declaration public virtual async Task SetValueAsync(ProviderModel provider, string key, string value, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider System.String key System.String value CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/CG.Orange.Plugins.Caching.html": {
    "href": "api/CG.Orange.Plugins.Caching.html",
    "title": "Namespace CG.Orange.Plugins.Caching",
    "keywords": "Namespace CG.Orange.Plugins.Caching Classes CacheProcessor This class is an in-memory implementation of the interface. Module This class represents the plugin module's startup logic."
  },
  "api/CG.Orange.Plugins.Caching.Module.html": {
    "href": "api/CG.Orange.Plugins.Caching.Module.html",
    "title": "Class Module",
    "keywords": "Class Module This class represents the plugin module's startup logic. Inheritance System.Object Module Namespace : CG.Orange.Plugins.Caching Assembly : CG.Orange.Plugins.Caching.dll Syntax public class Module : ModuleBase Methods Configure(WebApplication) Declaration public override void Configure(WebApplication webApplication) Parameters Type Name Description WebApplication webApplication ConfigureServices(WebApplicationBuilder, IConfiguration, Nullable<ILogger>) Declaration public override void ConfigureServices(WebApplicationBuilder webApplicationBuilder, IConfiguration configuration, ILogger? bootstrapLogger) Parameters Type Name Description WebApplicationBuilder webApplicationBuilder IConfiguration configuration System.Nullable < ILogger > bootstrapLogger"
  },
  "api/CG.Orange.Plugins.Caching.Options.html": {
    "href": "api/CG.Orange.Plugins.Caching.Options.html",
    "title": "Namespace CG.Orange.Plugins.Caching.Options",
    "keywords": "Namespace CG.Orange.Plugins.Caching.Options Classes ProcessorOptions This class contains configuration settings for the in-memory cache processor."
  },
  "api/CG.Orange.Plugins.Caching.Options.ProcessorOptions.html": {
    "href": "api/CG.Orange.Plugins.Caching.Options.ProcessorOptions.html",
    "title": "Class ProcessorOptions",
    "keywords": "Class ProcessorOptions This class contains configuration settings for the in-memory cache processor. Inheritance System.Object ProcessorOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Plugins.Caching.Options Assembly : CG.Orange.Plugins.Caching.dll Syntax class ProcessorOptions"
  },
  "api/CG.Orange.Processors.html": {
    "href": "api/CG.Orange.Processors.html",
    "title": "Namespace CG.Orange.Processors",
    "keywords": "Namespace CG.Orange.Processors Classes ProcessorException This class represents a processor related exception. ProcessorFactory This class is a default implementation of the IProcessorFactory interface. Interfaces ICacheProcessor This interface represents a cache processor. IProcessorFactory This interface represents a factory for creating processor instances at runtime. ISecretProcessor This interface represents a secret processor."
  },
  "api/CG.Orange.Processors.ICacheProcessor.html": {
    "href": "api/CG.Orange.Processors.ICacheProcessor.html",
    "title": "Interface ICacheProcessor",
    "keywords": "Interface ICacheProcessor This interface represents a cache processor. Namespace : CG.Orange.Processors Assembly : CG.Orange.Abstractions.dll Syntax public interface ICacheProcessor Methods GetValueAsync(ProviderModel, String, CancellationToken) This method fetches a value from a remote cache. Declaration Task<string> GetValueAsync(ProviderModel provider, string key, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. System.String key The key to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.String > A task to perform the operation that returns the plain-text value associated with the key, or NULL if no value was found. SetValueAsync(ProviderModel, String, String, CancellationToken) This method sets a value into a remote cache. Declaration Task SetValueAsync(ProviderModel provider, string key, string value, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. System.String key The key to use for the operation. System.String value The value to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Orange.Processors.IProcessorFactory.html": {
    "href": "api/CG.Orange.Processors.IProcessorFactory.html",
    "title": "Interface IProcessorFactory",
    "keywords": "Interface IProcessorFactory This interface represents a factory for creating processor instances at runtime. Namespace : CG.Orange.Processors Assembly : CG.Orange.Abstractions.dll Syntax public interface IProcessorFactory Methods CreateCacheProcessorAsync(ProviderModel, CancellationToken) This method creates a new ICacheProcessor object, based on the give tag value. Declaration Task<ICacheProcessor> CreateCacheProcessorAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ICacheProcessor > A task to perform the operation that returns the new ICacheProcessor instance, or NULL if the operation fails to create a processor instance. CreateSecretProcessorAsync(ProviderModel, CancellationToken) This method creates a new ISecretProcessor object, based on the give tag value. Declaration Task<ISecretProcessor> CreateSecretProcessorAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ISecretProcessor > A task to perform the operation that returns the new ISecretProcessor instance, or NULL if the operation fails to create a processor instance."
  },
  "api/CG.Orange.Processors.ISecretProcessor.html": {
    "href": "api/CG.Orange.Processors.ISecretProcessor.html",
    "title": "Interface ISecretProcessor",
    "keywords": "Interface ISecretProcessor This interface represents a secret processor. Namespace : CG.Orange.Processors Assembly : CG.Orange.Abstractions.dll Syntax public interface ISecretProcessor Methods GetValueAsync(ProviderModel, String, CancellationToken) This method fetches a secret from a remote service. Declaration Task<string> GetValueAsync(ProviderModel provider, string secretKey, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. System.String secretKey The secret key to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.String > A task to perform the operation that returns the plain-text value of the given secret, or NULL if no secret was found."
  },
  "api/CG.Orange.Processors.ProcessorException.html": {
    "href": "api/CG.Orange.Processors.ProcessorException.html",
    "title": "Class ProcessorException",
    "keywords": "Class ProcessorException This class represents a processor related exception. Inheritance System.Object ProcessorException Namespace : CG.Orange.Processors Assembly : CG.Orange.Primitives.dll Syntax public class ProcessorException : Exception Constructors ProcessorException() This constructor creates a new instance of the ProcessorException class. Declaration public ProcessorException() ProcessorException(SerializationInfo, StreamingContext) This constructor creates a new instance of the ProcessorException class. Declaration public ProcessorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. ProcessorException(String) This constructor creates a new instance of the ProcessorException class. Declaration public ProcessorException(string message) Parameters Type Name Description System.String message The message to use for the exception. ProcessorException(String, Exception) This constructor creates a new instance of the ProcessorException class. Declaration public ProcessorException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Orange.Processors.ProcessorFactory.html": {
    "href": "api/CG.Orange.Processors.ProcessorFactory.html",
    "title": "Class ProcessorFactory",
    "keywords": "Class ProcessorFactory This class is a default implementation of the IProcessorFactory interface. Inheritance System.Object ProcessorFactory Implements IProcessorFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Processors Assembly : CG.Orange.dll Syntax class ProcessorFactory : IProcessorFactory Constructors ProcessorFactory(IServiceProvider, IProviderManager, ILogger<IProcessorFactory>) This constructor creates a new instance of the ProcessorFactory class. Declaration public ProcessorFactory(IServiceProvider serviceProvider, IProviderManager providerManager, ILogger<IProcessorFactory> logger) Parameters Type Name Description IServiceProvider serviceProvider The service provider to use with this factory. IProviderManager providerManager The provider manager to use with this factory. ILogger < IProcessorFactory > logger The logger to use with this factory. Fields _logger This field contains the logger for this factory. Declaration protected readonly ILogger<IProcessorFactory> _logger Field Value Type Description ILogger < IProcessorFactory > _providerManager This field contains the provider manager for this factory. Declaration protected readonly IProviderManager _providerManager Field Value Type Description IProviderManager _serviceProvider This field contains the service provider for this factory. Declaration protected readonly IServiceProvider _serviceProvider Field Value Type Description IServiceProvider Methods CreateCacheProcessorAsync(ProviderModel, CancellationToken) Declaration public virtual Task<ICacheProcessor> CreateCacheProcessorAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < ICacheProcessor > CreateSecretProcessorAsync(ProviderModel, CancellationToken) Declaration public virtual Task<ISecretProcessor> CreateSecretProcessorAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider CancellationToken cancellationToken Returns Type Description Task < ISecretProcessor > Implements IProcessorFactory"
  },
  "api/CG.Orange.Repositories.html": {
    "href": "api/CG.Orange.Repositories.html",
    "title": "Namespace CG.Orange.Repositories",
    "keywords": "Namespace CG.Orange.Repositories Classes RepositoryException This class represents a repository related exception. Interfaces IProviderPropertyRepository This interface represents an object that manages the storage and retrieval of objects. IProviderRepository This interface represents an object that manages the storage and retrieval of objects. ISettingFileRepository This interface represents an object that manages the storage and retrieval of objects."
  },
  "api/CG.Orange.Repositories.IProviderPropertyRepository.html": {
    "href": "api/CG.Orange.Repositories.IProviderPropertyRepository.html",
    "title": "Interface IProviderPropertyRepository",
    "keywords": "Interface IProviderPropertyRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Orange.Repositories Assembly : CG.Orange.Abstractions.dll Syntax public interface IProviderPropertyRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. AnyByProviderAsync(ProviderModel, CancellationToken) This method indicates whether there are any objects in the underlying storage that are associated with the given provider. Declaration Task<bool> AnyByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountByProviderAsync(ProviderModel, CancellationToken) This method counts the number of objects in the underlying storage that are associated with the given provider. Declaration Task<int> CountByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int32 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(ProviderPropertyModel, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<ProviderPropertyModel> CreateAsync(ProviderPropertyModel providerProperty, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderPropertyModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(ProviderPropertyModel, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(ProviderPropertyModel providerProperty, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<ProviderPropertyModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < ProviderPropertyModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a matching object using the given identifier. Declaration Task<ProviderPropertyModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < ProviderPropertyModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByProviderAsync(ProviderModel, CancellationToken) This method searches for all the objects that belong to the given provider. Declaration Task<IEnumerable<ProviderPropertyModel>> FindByProviderAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The provider to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < ProviderPropertyModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(ProviderPropertyModel, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<ProviderPropertyModel> UpdateAsync(ProviderPropertyModel providerProperty, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderPropertyModel providerProperty The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderPropertyModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Orange.Repositories.IProviderRepository.html": {
    "href": "api/CG.Orange.Repositories.IProviderRepository.html",
    "title": "Interface IProviderRepository",
    "keywords": "Interface IProviderRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Orange.Repositories Assembly : CG.Orange.Abstractions.dll Syntax public interface IProviderRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(ProviderModel, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<ProviderModel> CreateAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(ProviderModel, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<ProviderModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < ProviderModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a matching object using the given identifier. Declaration Task<ProviderModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < ProviderModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByTagAndTypeAsync(String, Nullable<ProviderType>, CancellationToken) This method searches for a matching object using the given provider tag and an optional value. Declaration Task<ProviderModel?> FindByTagAndTypeAsync(string tag, ProviderType? providerType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String tag The provider tag to use for the operation. System.Nullable < ProviderType > providerType The optional provider type to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < ProviderModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(ProviderModel, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<ProviderModel> UpdateAsync(ProviderModel provider, CancellationToken cancellationToken = null) Parameters Type Name Description ProviderModel provider The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < ProviderModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Orange.Repositories.ISettingFileRepository.html": {
    "href": "api/CG.Orange.Repositories.ISettingFileRepository.html",
    "title": "Interface ISettingFileRepository",
    "keywords": "Interface ISettingFileRepository This interface represents an object that manages the storage and retrieval of objects. Namespace : CG.Orange.Repositories Assembly : CG.Orange.Abstractions.dll Syntax public interface ISettingFileRepository Methods AnyAsync(CancellationToken) This method indicates whether there are any objects in the underlying storage. Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. AnyAsync(String, String, CancellationToken) This method indicates whether there are any objects in the underlying storage that match the given application and environment names. Declaration Task<bool> AnyAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Boolean > A task to perform the operation that returns true if there are any objects; false otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CountAsync(CancellationToken) This method counts the number of objects in the underlying storage. Declaration Task<long> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Int64 > A task to perform the operation that returns a count of the number of objects in the underlying storage. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. CreateAsync(SettingFileModel, CancellationToken) This method creates a new object in the underlying storage. Declaration Task<SettingFileModel> CreateAsync(SettingFileModel settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile The model to create in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFileModel > A task to perform the operation that returns the newly created object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. DeleteAsync(SettingFileModel, CancellationToken) This method deletes an existing object from the underlying storage. Declaration Task DeleteAsync(SettingFileModel settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile The model to delete from the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindAllAsync(CancellationToken) This method searches for all the objects. Declaration Task<IEnumerable<SettingFileModel>> FindAllAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < IEnumerable < SettingFileModel >> A task to perform the operation that returns a sequence of objects. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByApplicationAndEnvironmentAsync(String, String, CancellationToken) This method searches for a matching object using the given application and environment names. Declaration Task<SettingFileModel?> FindByApplicationAndEnvironmentAsync(string applicationName, string environmentName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String applicationName The application name to use for the operation. System.String environmentName The environment name to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < SettingFileModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. FindByIdAsync(Int32, CancellationToken) This method searches for a matching object using the given identifier. Declaration Task<SettingFileModel?> FindByIdAsync(int id, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 id The identifier to use for the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < SettingFileModel >> A task to perform the operation that returns a objects, if a match was found, of NULL otherwise. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation. UpdateAsync(SettingFileModel, CancellationToken) This method updates an existing object in the underlying storage. Declaration Task<SettingFileModel> UpdateAsync(SettingFileModel settingFile, CancellationToken cancellationToken = null) Parameters Type Name Description SettingFileModel settingFile The model to update in the underlying storage. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < SettingFileModel > A task to perform the operation that returns the newly updated object. Exceptions Type Condition RepositoryException This exception is thrown whenever the repository fails to complete the operation."
  },
  "api/CG.Orange.Repositories.RepositoryException.html": {
    "href": "api/CG.Orange.Repositories.RepositoryException.html",
    "title": "Class RepositoryException",
    "keywords": "Class RepositoryException This class represents a repository related exception. Inheritance System.Object RepositoryException Namespace : CG.Orange.Repositories Assembly : CG.Orange.Primitives.dll Syntax public class RepositoryException : Exception Constructors RepositoryException() This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException() RepositoryException(SerializationInfo, StreamingContext) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. RepositoryException(String) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message) Parameters Type Name Description System.String message The message to use for the exception. RepositoryException(String, Exception) This constructor creates a new instance of the RepositoryException class. Declaration public RepositoryException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Orange.Utilities.html": {
    "href": "api/CG.Orange.Utilities.html",
    "title": "Namespace CG.Orange.Utilities",
    "keywords": "Namespace CG.Orange.Utilities Classes ReplacementToken This class utility contains logic to parse replacement tokens."
  },
  "api/CG.Orange.Utilities.ReplacementToken.html": {
    "href": "api/CG.Orange.Utilities.ReplacementToken.html",
    "title": "Class ReplacementToken",
    "keywords": "Class ReplacementToken This class utility contains logic to parse replacement tokens. Inheritance System.Object ReplacementToken Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Orange.Utilities Assembly : CG.Orange.Abstractions.dll Syntax public static class ReplacementToken Methods HasToken(String) This method determines whether the value contains a replacement token, or not. Declaration public static bool HasToken(string value) Parameters Type Name Description System.String value The value to by tested. Returns Type Description System.Boolean true if the value contains a replacement token, false otherwise. TryParse(String, out String, out String, out String) This method parses a replacement token. Declaration public static bool TryParse(string token, out string secretTag, out string cacheTag, out string altKey) Parameters Type Name Description System.String token The replacement token to be parsed. System.String secretTag The parsed secret tag (if any). System.String cacheTag The parsed cache tag (if any). System.String altKey The parsed alternate key (if any). Returns Type Description System.Boolean true if the value was parsed, false otherwise."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationBuilderExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions",
    "keywords": "Class WebApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.Data.InMemory.dll Syntax public static class WebApplicationBuilderExtensions Methods AddInMemoryDataAccess(WebApplicationBuilder, String, Nullable<ILogger>) This method adds required services for this in-memory provider. Declaration public static WebApplicationBuilder AddInMemoryDataAccess(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL:InMemory\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL:InMemory . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html",
    "title": "Class WebApplicationBuilderExtensions001",
    "keywords": "Class WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions001 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.dll Syntax public static class WebApplicationBuilderExtensions001 Methods AddManagers(WebApplicationBuilder, String, Nullable<ILogger>) This method adds managers, directors, and related services, for the CG.Orange business logic layer. Declaration public static WebApplicationBuilder AddManagers(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"BLL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to BLL . System.Nullable < ILogger > bootstrapLogger The bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions003.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions003.html",
    "title": "Class WebApplicationBuilderExtensions003",
    "keywords": "Class WebApplicationBuilderExtensions003 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions003 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.Data.dll Syntax public static class WebApplicationBuilderExtensions003 Methods AddRepositories(WebApplicationBuilder, String, Nullable<ILogger>) This method adds repositories and related services, for the CG.Orange data-access layer. Declaration public static WebApplicationBuilder AddRepositories(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"DAL\", ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to DAL . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html",
    "title": "Class WebApplicationExtensions",
    "keywords": "Class WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Orange.Data.InMemory.dll Syntax public static class WebApplicationExtensions Methods UseInMemoryDataAccess(WebApplication) This method performs startup operations for this in-memory provider. Declaration public static WebApplication UseInMemoryDataAccess(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Purple is an idea for a self contained messaging microservice."
  }
}